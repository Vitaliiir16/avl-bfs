{"ast":null,"code":"var _jsxFileName = \"D:\\\\kr\\\\src\\\\components\\\\Graph\\\\adjacencyMatrix\\\\AdjacencyMatrix.jsx\";\n// src/components/Graph/adjacencyMatrix/AdjacencyMatrix.jsx\n\nimport React from 'react';\nimport './AdjacencyMatrix.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdjacencyMatrix = ({\n  nodes,\n  edges\n}) => {\n  const matrixSize = nodes.length;\n  const matrix = Array(matrixSize).fill(0).map(() => Array(matrixSize).fill(0));\n  edges.forEach(edge => {\n    const fromIndex = nodes.findIndex(node => node.id === edge.from);\n    const toIndex = nodes.findIndex(node => node.id === edge.to);\n    if (fromIndex !== -1 && toIndex !== -1) {\n      matrix[fromIndex][toIndex] = 1;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adjacency-matrix\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u041C\\u0430\\u0442\\u0440\\u0438\\u0446\\u044F \\u0421\\u0443\\u043C\\u0456\\u0436\\u043D\\u043E\\u0441\\u0442\\u0456\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), nodes.map(node => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: node.label\n          }, node.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: matrix.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: nodes[i].label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), row.map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: val === 0 ? 'zero-cell' : 'one-cell',\n            children: val\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this))]\n        }, nodes[i].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = AdjacencyMatrix;\nexport default AdjacencyMatrix;\nvar _c;\n$RefreshReg$(_c, \"AdjacencyMatrix\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AdjacencyMatrix","nodes","edges","matrixSize","length","matrix","Array","fill","map","forEach","edge","fromIndex","findIndex","node","id","from","toIndex","to","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","row","i","val","j","_c","$RefreshReg$"],"sources":["D:/kr/src/components/Graph/adjacencyMatrix/AdjacencyMatrix.jsx"],"sourcesContent":["// src/components/Graph/adjacencyMatrix/AdjacencyMatrix.jsx\r\n\r\nimport React from 'react';\r\nimport './AdjacencyMatrix.css';\r\n\r\nconst AdjacencyMatrix = ({ nodes, edges }) => {\r\n  const matrixSize = nodes.length;\r\n  const matrix = Array(matrixSize)\r\n    .fill(0)\r\n    .map(() => Array(matrixSize).fill(0));\r\n\r\n  edges.forEach((edge) => {\r\n    const fromIndex = nodes.findIndex((node) => node.id === edge.from);\r\n    const toIndex = nodes.findIndex((node) => node.id === edge.to);\r\n    if (fromIndex !== -1 && toIndex !== -1) {\r\n      matrix[fromIndex][toIndex] = 1;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"adjacency-matrix\">\r\n      <h3>Матриця Суміжності</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            {nodes.map((node) => (\r\n              <th key={node.id}>{node.label}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {matrix.map((row, i) => (\r\n            <tr key={nodes[i].id}>\r\n              <td>{nodes[i].label}</td>\r\n              {row.map((val, j) => (\r\n                <td\r\n                  key={j}\r\n                  className={val === 0 ? 'zero-cell' : 'one-cell'}\r\n                >\r\n                  {val}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdjacencyMatrix;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}