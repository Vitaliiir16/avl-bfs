{"ast":null,"code":"var _jsxFileName = \"D:\\\\kr\\\\src\\\\components\\\\Graph\\\\Graph.jsx\",\n  _s = $RefreshSig$();\n// src/components/Graph/Graph.jsx\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport Controls from './Controls';\nimport Visualization from './Visualization';\nimport RepresentationControls from './RepresentationControls';\nimport CurrentNode from './CurrentNode';\nimport AdjacencyMatrix from './adjacencyMatrix/AdjacencyMatrix';\nimport EdgeList from './edgeList/EdgeList';\nimport { depthFirstSearch } from './algorithms/depthFirstSearch';\nimport './Graph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = () => {\n  _s();\n  const [vertices, setVertices] = useState([]);\n  const [arrows, setArrows] = useState([]);\n  const [running, setRunning] = useState(false);\n  const [paused, setPaused] = useState(false);\n  const [current, setCurrent] = useState(null);\n  const [destination, setDestination] = useState(null);\n  const [history, setHistory] = useState([]);\n  const [view, setView] = useState('matrix');\n  const [iterator, setIterator] = useState(null);\n  useEffect(() => {\n    setupInitialGraph();\n  }, []);\n  const setupInitialGraph = () => {\n    const initialVertices = [{\n      id: 1,\n      label: 'V1',\n      x: 200,\n      y: 100,\n      state: 'unvisited'\n    }, {\n      id: 2,\n      label: 'V2',\n      x: 400,\n      y: 100,\n      state: 'unvisited'\n    }, {\n      id: 3,\n      label: 'V3',\n      x: 600,\n      y: 100,\n      state: 'unvisited'\n    }, {\n      id: 4,\n      label: 'V4',\n      x: 200,\n      y: 200,\n      state: 'unvisited'\n    }, {\n      id: 5,\n      label: 'V5',\n      x: 400,\n      y: 200,\n      state: 'unvisited'\n    }, {\n      id: 6,\n      label: 'V6',\n      x: 600,\n      y: 200,\n      state: 'unvisited'\n    }];\n    const initialArrows = [{\n      from: 1,\n      to: 2\n    }, {\n      from: 2,\n      to: 3\n    }, {\n      from: 3,\n      to: 4\n    }, {\n      from: 4,\n      to: 5\n    }, {\n      from: 5,\n      to: 6\n    }];\n    setVertices(initialVertices);\n    setArrows(initialArrows);\n  };\n  const handleAddVertex = () => {\n    if (vertices.length >= 15) {\n      alert('Максимальна кількість вершин досягнута');\n      return;\n    }\n    const newId = vertices.length + 1;\n    const rows = Math.ceil(newId / 3);\n    const cols = (newId - 1) % 3 + 1;\n    const newX = 200 + (cols - 1) * 200;\n    const newY = 70 + (rows - 1) * 120;\n    const newVertex = {\n      id: newId,\n      label: `V${newId}`,\n      x: newX,\n      y: newY,\n      state: 'unvisited'\n    };\n    setVertices(prev => [...prev, newVertex]);\n  };\n  const handleRemoveVertex = () => {\n    const id = parseInt(prompt('Введіть ID вершини для видалення:'), 10);\n    if (isNaN(id) || !vertices.some(v => v.id === id)) {\n      alert('Некоректний ID вершини');\n      return;\n    }\n    setVertices(prev => prev.filter(v => v.id !== id));\n    setArrows(prev => prev.filter(a => a.from !== id && a.to !== id));\n  };\n  const handleAddArrow = () => {\n    const from = parseInt(prompt('Введіть ID вихідної вершини:'), 10);\n    const to = parseInt(prompt('Введіть ID цільової вершини:'), 10);\n    if (isNaN(from) || isNaN(to) || !vertices.some(v => v.id === from) || !vertices.some(v => v.id === to)) {\n      alert('Некоректні ID вершин');\n      return;\n    }\n    setArrows(prev => [...prev, {\n      from,\n      to\n    }]);\n  };\n  const handleRemoveArrow = () => {\n    const from = parseInt(prompt('Введіть ID вихідної вершини для видалення ребра:'), 10);\n    const to = parseInt(prompt('Введіть ID цільової вершини для видалення ребра:'), 10);\n    if (isNaN(from) || isNaN(to) || !arrows.some(a => a.from === from && a.to === to)) {\n      alert('Ребро не знайдено');\n      return;\n    }\n    setArrows(prev => prev.filter(a => !(a.from === from && a.to === to)));\n  };\n  const initiateDFS = () => {\n    if (running) return;\n    const start = parseInt(prompt('Введіть ID початкової вершини:'), 10);\n    const end = parseInt(prompt('Введіть ID кінцевої вершини:'), 10);\n    if (isNaN(start) || isNaN(end) || !vertices.some(v => v.id === start) || !vertices.some(v => v.id === end)) {\n      alert('Некоректний ID вершини');\n      return;\n    }\n    setRunning(true);\n    setPaused(false);\n    setDestination(end);\n    const dfsIterator = depthFirstSearch(vertices, arrows, start, end);\n    setIterator(dfsIterator);\n  };\n  const performStep = useCallback(async () => {\n    if (!iterator || paused || !running) return;\n    const {\n      value,\n      done\n    } = iterator.next();\n    if (done) {\n      setRunning(false);\n      setCurrent(null);\n      return;\n    }\n    const {\n      current: nodeId,\n      action\n    } = value;\n    if (action === 'processing') {\n      setVertices(prev => prev.map(v => v.id === nodeId ? {\n        ...v,\n        state: 'processing'\n      } : v));\n      setCurrent(nodeId);\n    } else if (action === 'found') {\n      setVertices(prev => prev.map(v => v.id === nodeId ? {\n        ...v,\n        state: 'target'\n      } : v));\n      alert(`Знайдено кінцеву вершину V${nodeId}`);\n      setRunning(false);\n      setCurrent(null);\n    } else if (action === 'visited') {\n      setVertices(prev => prev.map(v => v.id === nodeId ? {\n        ...v,\n        state: 'visited'\n      } : v));\n      setHistory(prev => [...prev, nodeId]);\n    }\n  }, [iterator, paused, running, setVertices, setHistory]);\n  useEffect(() => {\n    if (running && !paused && iterator) {\n      const timer = setTimeout(() => {\n        performStep();\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [performStep, running, paused, iterator]);\n  const togglePause = () => {\n    setPaused(prev => !prev);\n  };\n  const handleUndo = () => {\n    if (history.length === 0) {\n      alert('Немає кроків для відміни.');\n      return;\n    }\n    const last = history[history.length - 1];\n    setVertices(prev => prev.map(v => v.id === last ? {\n      ...v,\n      state: 'processing'\n    } : v));\n    setHistory(prev => prev.slice(0, -1));\n    setCurrent(last);\n  };\n  const resetGraph = () => {\n    setVertices(prev => prev.map(v => ({\n      ...v,\n      state: 'unvisited'\n    })));\n    setHistory([]);\n    setCurrent(null);\n    setDestination(null);\n    setRunning(false);\n    setPaused(false);\n    setIterator(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u043B\\u0433\\u043E\\u0440\\u0438\\u0442\\u043C \\u041F\\u043E\\u0448\\u0443\\u043A\\u0443 \\u0432 \\u0413\\u043B\\u0438\\u0431\\u0438\\u043D\\u0443 (DFS)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Visualization, {\n      nodes: vertices,\n      edges: arrows,\n      target: destination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      onAddNode: handleAddVertex,\n      onDeleteNode: handleRemoveVertex,\n      onAddEdge: handleAddArrow,\n      onDeleteEdge: handleRemoveArrow,\n      onStart: initiateDFS,\n      onPause: togglePause,\n      onUndo: handleUndo,\n      onReset: resetGraph,\n      isRunning: running,\n      isPaused: paused\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentNode, {\n      node: current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RepresentationControls, {\n      setView: setView,\n      currentView: view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), view === 'matrix' ? /*#__PURE__*/_jsxDEV(AdjacencyMatrix, {\n      nodes: vertices,\n      edges: arrows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(EdgeList, {\n      edges: arrows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"Ov6m2itj76tMTeLlmn8agSe+8D0=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Link","Controls","Visualization","RepresentationControls","CurrentNode","AdjacencyMatrix","EdgeList","depthFirstSearch","jsxDEV","_jsxDEV","Graph","_s","vertices","setVertices","arrows","setArrows","running","setRunning","paused","setPaused","current","setCurrent","destination","setDestination","history","setHistory","view","setView","iterator","setIterator","setupInitialGraph","initialVertices","id","label","x","y","state","initialArrows","from","to","handleAddVertex","length","alert","newId","rows","Math","ceil","cols","newX","newY","newVertex","prev","handleRemoveVertex","parseInt","prompt","isNaN","some","v","filter","a","handleAddArrow","handleRemoveArrow","initiateDFS","start","end","dfsIterator","performStep","value","done","next","nodeId","action","map","timer","setTimeout","clearTimeout","togglePause","handleUndo","last","slice","resetGraph","className","children","fileName","_jsxFileName","lineNumber","columnNumber","nodes","edges","target","onAddNode","onDeleteNode","onAddEdge","onDeleteEdge","onStart","onPause","onUndo","onReset","isRunning","isPaused","node","currentView","_c","$RefreshReg$"],"sources":["D:/kr/src/components/Graph/Graph.jsx"],"sourcesContent":["// src/components/Graph/Graph.jsx\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Controls from './Controls';\r\nimport Visualization from './Visualization';\r\nimport RepresentationControls from './RepresentationControls';\r\nimport CurrentNode from './CurrentNode';\r\nimport AdjacencyMatrix from './adjacencyMatrix/AdjacencyMatrix';\r\nimport EdgeList from './edgeList/EdgeList';\r\nimport { depthFirstSearch } from './algorithms/depthFirstSearch';\r\nimport './Graph.css';\r\n\r\nconst Graph = () => {\r\n  const [vertices, setVertices] = useState([]);\r\n  const [arrows, setArrows] = useState([]);\r\n  const [running, setRunning] = useState(false);\r\n  const [paused, setPaused] = useState(false);\r\n  const [current, setCurrent] = useState(null);\r\n  const [destination, setDestination] = useState(null);\r\n  const [history, setHistory] = useState([]);\r\n  const [view, setView] = useState('matrix');\r\n  const [iterator, setIterator] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setupInitialGraph();\r\n  }, []);\r\n\r\n  const setupInitialGraph = () => {\r\n    const initialVertices = [\r\n      { id: 1, label: 'V1', x: 200, y: 100, state: 'unvisited' },\r\n      { id: 2, label: 'V2', x: 400, y: 100, state: 'unvisited' },\r\n      { id: 3, label: 'V3', x: 600, y: 100, state: 'unvisited' },\r\n      { id: 4, label: 'V4', x: 200, y: 200, state: 'unvisited' },\r\n      { id: 5, label: 'V5', x: 400, y: 200, state: 'unvisited' },\r\n      { id: 6, label: 'V6', x: 600, y: 200, state: 'unvisited' },\r\n    ];\r\n\r\n    const initialArrows = [\r\n      { from: 1, to: 2 },\r\n      { from: 2, to: 3 },\r\n      { from: 3, to: 4 },\r\n      { from: 4, to: 5 },\r\n      { from: 5, to: 6 },\r\n    ];\r\n\r\n    setVertices(initialVertices);\r\n    setArrows(initialArrows);\r\n  };\r\n\r\n  const handleAddVertex = () => {\r\n    if (vertices.length >= 15) {\r\n      alert('Максимальна кількість вершин досягнута');\r\n      return;\r\n    }\r\n\r\n    const newId = vertices.length + 1;\r\n    const rows = Math.ceil(newId / 3);\r\n    const cols = (newId - 1) % 3 + 1;\r\n    const newX = 200 + (cols - 1) * 200;\r\n    const newY = 70 + (rows - 1) * 120;\r\n\r\n    const newVertex = {\r\n      id: newId,\r\n      label: `V${newId}`,\r\n      x: newX,\r\n      y: newY,\r\n      state: 'unvisited',\r\n    };\r\n\r\n    setVertices(prev => [...prev, newVertex]);\r\n  };\r\n\r\n  const handleRemoveVertex = () => {\r\n    const id = parseInt(prompt('Введіть ID вершини для видалення:'), 10);\r\n    if (isNaN(id) || !vertices.some(v => v.id === id)) {\r\n      alert('Некоректний ID вершини');\r\n      return;\r\n    }\r\n\r\n    setVertices(prev => prev.filter(v => v.id !== id));\r\n    setArrows(prev => prev.filter(a => a.from !== id && a.to !== id));\r\n  };\r\n\r\n  const handleAddArrow = () => {\r\n    const from = parseInt(prompt('Введіть ID вихідної вершини:'), 10);\r\n    const to = parseInt(prompt('Введіть ID цільової вершини:'), 10);\r\n\r\n    if (\r\n      isNaN(from) ||\r\n      isNaN(to) ||\r\n      !vertices.some(v => v.id === from) ||\r\n      !vertices.some(v => v.id === to)\r\n    ) {\r\n      alert('Некоректні ID вершин');\r\n      return;\r\n    }\r\n\r\n    setArrows(prev => [...prev, { from, to }]);\r\n  };\r\n\r\n  const handleRemoveArrow = () => {\r\n    const from = parseInt(prompt('Введіть ID вихідної вершини для видалення ребра:'), 10);\r\n    const to = parseInt(prompt('Введіть ID цільової вершини для видалення ребра:'), 10);\r\n\r\n    if (\r\n      isNaN(from) ||\r\n      isNaN(to) ||\r\n      !arrows.some(a => a.from === from && a.to === to)\r\n    ) {\r\n      alert('Ребро не знайдено');\r\n      return;\r\n    }\r\n\r\n    setArrows(prev => prev.filter(a => !(a.from === from && a.to === to)));\r\n  };\r\n\r\n  const initiateDFS = () => {\r\n    if (running) return;\r\n\r\n    const start = parseInt(prompt('Введіть ID початкової вершини:'), 10);\r\n    const end = parseInt(prompt('Введіть ID кінцевої вершини:'), 10);\r\n\r\n    if (\r\n      isNaN(start) ||\r\n      isNaN(end) ||\r\n      !vertices.some(v => v.id === start) ||\r\n      !vertices.some(v => v.id === end)\r\n    ) {\r\n      alert('Некоректний ID вершини');\r\n      return;\r\n    }\r\n\r\n    setRunning(true);\r\n    setPaused(false);\r\n    setDestination(end);\r\n\r\n    const dfsIterator = depthFirstSearch(\r\n      vertices,\r\n      arrows,\r\n      start,\r\n      end\r\n    );\r\n    setIterator(dfsIterator);\r\n  };\r\n\r\n  const performStep = useCallback(async () => {\r\n    if (!iterator || paused || !running) return;\r\n\r\n    const { value, done } = iterator.next();\r\n\r\n    if (done) {\r\n      setRunning(false);\r\n      setCurrent(null);\r\n      return;\r\n    }\r\n\r\n    const { current: nodeId, action } = value;\r\n\r\n    if (action === 'processing') {\r\n      setVertices(prev =>\r\n        prev.map(v =>\r\n          v.id === nodeId ? { ...v, state: 'processing' } : v\r\n        )\r\n      );\r\n      setCurrent(nodeId);\r\n    } else if (action === 'found') {\r\n      setVertices(prev =>\r\n        prev.map(v =>\r\n          v.id === nodeId ? { ...v, state: 'target' } : v\r\n        )\r\n      );\r\n      alert(`Знайдено кінцеву вершину V${nodeId}`);\r\n      setRunning(false);\r\n      setCurrent(null);\r\n    } else if (action === 'visited') {\r\n      setVertices(prev =>\r\n        prev.map(v =>\r\n          v.id === nodeId ? { ...v, state: 'visited' } : v\r\n        )\r\n      );\r\n      setHistory(prev => [...prev, nodeId]);\r\n    }\r\n  }, [iterator, paused, running, setVertices, setHistory]);\r\n\r\n  useEffect(() => {\r\n    if (running && !paused && iterator) {\r\n      const timer = setTimeout(() => {\r\n        performStep();\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [performStep, running, paused, iterator]);\r\n\r\n  const togglePause = () => {\r\n    setPaused(prev => !prev);\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (history.length === 0) {\r\n      alert('Немає кроків для відміни.');\r\n      return;\r\n    }\r\n\r\n    const last = history[history.length - 1];\r\n    setVertices(prev =>\r\n      prev.map(v =>\r\n        v.id === last ? { ...v, state: 'processing' } : v\r\n      )\r\n    );\r\n    setHistory(prev => prev.slice(0, -1));\r\n    setCurrent(last);\r\n  };\r\n\r\n  const resetGraph = () => {\r\n    setVertices(prev =>\r\n      prev.map(v => ({ ...v, state: 'unvisited' }))\r\n    );\r\n    setHistory([]);\r\n    setCurrent(null);\r\n    setDestination(null);\r\n    setRunning(false);\r\n    setPaused(false);\r\n    setIterator(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph-container\">\r\n      <h1>Алгоритм Пошуку в Глибину (DFS)</h1>\r\n      <Visualization nodes={vertices} edges={arrows} target={destination} />\r\n      <Controls\r\n        onAddNode={handleAddVertex}\r\n        onDeleteNode={handleRemoveVertex}\r\n        onAddEdge={handleAddArrow}\r\n        onDeleteEdge={handleRemoveArrow}\r\n        onStart={initiateDFS}\r\n        onPause={togglePause}\r\n        onUndo={handleUndo}\r\n        onReset={resetGraph}\r\n        isRunning={running}\r\n        isPaused={paused}\r\n      />\r\n      <CurrentNode node={current} />\r\n      <RepresentationControls setView={setView} currentView={view} />\r\n      {view === 'matrix' ? (\r\n        <AdjacencyMatrix nodes={vertices} edges={arrows} />\r\n      ) : (\r\n        <EdgeList edges={arrows} />\r\n      )}\r\n      <Link to=\"/\">\r\n        <button>Home</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}