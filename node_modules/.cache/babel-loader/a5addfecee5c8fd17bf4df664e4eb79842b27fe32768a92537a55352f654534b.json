{"ast":null,"code":"var _jsxFileName = \"D:\\\\kr\\\\src\\\\components\\\\Graph\\\\Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AdjacencyMatrix from './AdjacencyMatrix/AdjacencyMatrix';\nimport EdgeList from './EdgeList/EdgeList';\nimport './Graph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = () => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [visitedStack, setVisitedStack] = useState([]);\n  const [stepHistory, setStepHistory] = useState([]); // Для збереження попередніх кроків алгоритму\n  const [representation, setRepresentation] = useState('matrix');\n  useEffect(() => {\n    initializeGraph();\n  }, []);\n  const initializeGraph = () => {\n    const initialNodes = [{\n      id: 1,\n      label: 'V1',\n      x: 200,\n      y: 200,\n      state: 'unvisited'\n    }, {\n      id: 2,\n      label: 'V2',\n      x: 300,\n      y: 200,\n      state: 'unvisited'\n    }, {\n      id: 3,\n      label: 'V3',\n      x: 400,\n      y: 200,\n      state: 'unvisited'\n    }, {\n      id: 4,\n      label: 'V4',\n      x: 200,\n      y: 300,\n      state: 'unvisited'\n    }, {\n      id: 5,\n      label: 'V5',\n      x: 300,\n      y: 300,\n      state: 'unvisited'\n    }, {\n      id: 6,\n      label: 'V6',\n      x: 400,\n      y: 300,\n      state: 'unvisited'\n    }];\n    const initialEdges = [{\n      from: 1,\n      to: 2\n    }, {\n      from: 2,\n      to: 3\n    }, {\n      from: 3,\n      to: 6\n    }, {\n      from: 1,\n      to: 4\n    }, {\n      from: 4,\n      to: 5\n    }, {\n      from: 5,\n      to: 6\n    }];\n    setNodes(initialNodes);\n    setEdges(initialEdges);\n  };\n  const saveHistory = () => {\n    setHistory(prev => [...prev, {\n      nodes: [...nodes],\n      edges: [...edges]\n    }]);\n  };\n  const startDFS = async () => {\n    if (isRunning) return;\n    const startNodeId = parseInt(prompt('Введіть ID початкової вершини:'), 10);\n    if (isNaN(startNodeId) || !nodes.some(node => node.id === startNodeId)) {\n      alert('Некоректний ID початкової вершини');\n      return;\n    }\n    setIsRunning(true);\n    setIsPaused(false);\n    const visited = new Set();\n    const stack = [startNodeId];\n    setVisitedStack(stack);\n    while (stack.length > 0) {\n      if (isPaused) {\n        await new Promise(resolve => {\n          const interval = setInterval(() => {\n            if (!isPaused) {\n              clearInterval(interval);\n              resolve();\n            }\n          }, 100);\n        });\n      }\n      const current = stack.pop();\n      setCurrentNode(current);\n      setStepHistory(prev => [...prev, current]); // Зберігаємо попередній крок\n\n      setNodes(prev => prev.map(node => node.id === current ? {\n        ...node,\n        state: 'processing'\n      } : node));\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      visited.add(current);\n      const neighbors = edges.filter(edge => edge.from === current && !visited.has(edge.to)).map(edge => edge.to);\n      neighbors.forEach(neighbor => {\n        if (!visited.has(neighbor)) {\n          stack.push(neighbor);\n        }\n      });\n      setVisitedStack([...stack]);\n      setNodes(prev => prev.map(node => node.id === current ? {\n        ...node,\n        state: 'visited'\n      } : node));\n    }\n    setIsRunning(false);\n    setCurrentNode(null);\n  };\n  const pauseDFS = () => {\n    setIsPaused(!isPaused);\n  };\n  const undoDFS = () => {\n    if (stepHistory.length === 0) {\n      alert('Немає попередніх кроків для відкату.');\n      return;\n    }\n    const lastVisitedNode = stepHistory.pop();\n    setStepHistory([...stepHistory]);\n    setNodes(prev => prev.map(node => node.id === lastVisitedNode ? {\n      ...node,\n      state: 'unvisited'\n    } : node));\n    setVisitedStack(prev => [...prev, lastVisitedNode]);\n    setCurrentNode(lastVisitedNode);\n  };\n  const renderGraph = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"800\",\n    height: \"600\",\n    children: [edges.map((edge, index) => {\n      const fromNode = nodes.find(node => node.id === edge.from);\n      const toNode = nodes.find(node => node.id === edge.to);\n      if (!fromNode || !toNode) return null;\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: fromNode.x,\n        y1: fromNode.y,\n        x2: toNode.x,\n        y2: toNode.y,\n        stroke: \"black\",\n        markerEnd: \"url(#arrowhead)\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"arrowhead\",\n        markerWidth: \"10\",\n        markerHeight: \"7\",\n        refX: \"10\",\n        refY: \"3.5\",\n        orient: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n          points: \"0 0, 10 3.5, 0 7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), nodes.map(node => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: node.x,\n        cy: node.y,\n        r: \"20\",\n        fill: node.state === 'unvisited' ? 'gray' : node.state === 'processing' ? 'orange' : 'black'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: node.x,\n        y: node.y + 5,\n        textAnchor: \"middle\",\n        fill: \"white\",\n        fontSize: \"15\",\n        children: node.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, node.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u043B\\u0433\\u043E\\u0440\\u0438\\u0442\\u043C \\u0413\\u043B\\u0438\\u0431\\u043E\\u043A\\u043E\\u0433\\u043E \\u041F\\u043E\\u0448\\u0443\\u043A\\u0443 (DFS)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-area\",\n      children: renderGraph()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"representation-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRepresentation('matrix'),\n        children: \"\\u041C\\u0430\\u0442\\u0440\\u0438\\u0446\\u044F \\u0421\\u0443\\u043C\\u0456\\u0436\\u043D\\u043E\\u0441\\u0442\\u0456\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRepresentation('edges'),\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0420\\u0435\\u0431\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), representation === 'matrix' && /*#__PURE__*/_jsxDEV(AdjacencyMatrix, {\n      nodes: nodes,\n      edges: edges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 39\n    }, this), representation === 'edges' && /*#__PURE__*/_jsxDEV(EdgeList, {\n      edges: edges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startDFS,\n        children: \"\\u0421\\u0442\\u0430\\u0440\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pauseDFS,\n        disabled: !isRunning,\n        children: isPaused ? 'Продовжити' : 'Пауза'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undoDFS,\n        disabled: !isRunning,\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), currentNode && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041F\\u043E\\u0442\\u043E\\u0447\\u043D\\u0430 \\u0432\\u0435\\u0440\\u0448\\u0438\\u043D\\u0430: V\", currentNode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"C5TbQxp/SxR1jEGUj1xwRqKjN7E=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","Link","AdjacencyMatrix","EdgeList","jsxDEV","_jsxDEV","Graph","_s","nodes","setNodes","edges","setEdges","history","setHistory","isRunning","setIsRunning","isPaused","setIsPaused","currentNode","setCurrentNode","visitedStack","setVisitedStack","stepHistory","setStepHistory","representation","setRepresentation","initializeGraph","initialNodes","id","label","x","y","state","initialEdges","from","to","saveHistory","prev","startDFS","startNodeId","parseInt","prompt","isNaN","some","node","alert","visited","Set","stack","length","Promise","resolve","interval","setInterval","clearInterval","current","pop","map","setTimeout","add","neighbors","filter","edge","has","forEach","neighbor","push","pauseDFS","undoDFS","lastVisitedNode","renderGraph","width","height","children","index","fromNode","find","toNode","x1","y1","x2","y2","stroke","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","markerWidth","markerHeight","refX","refY","orient","points","cx","cy","r","fill","textAnchor","fontSize","className","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/kr/src/components/Graph/Graph.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AdjacencyMatrix from './AdjacencyMatrix/AdjacencyMatrix';\r\nimport EdgeList from './EdgeList/EdgeList';\r\nimport './Graph.css';\r\n\r\nconst Graph = () => {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [currentNode, setCurrentNode] = useState(null);\r\n  const [visitedStack, setVisitedStack] = useState([]);\r\n  const [stepHistory, setStepHistory] = useState([]); // Для збереження попередніх кроків алгоритму\r\n  const [representation, setRepresentation] = useState('matrix');\r\n\r\n  useEffect(() => {\r\n    initializeGraph();\r\n  }, []);\r\n\r\n  const initializeGraph = () => {\r\n    const initialNodes = [\r\n      { id: 1, label: 'V1', x: 200, y: 200, state: 'unvisited' },\r\n      { id: 2, label: 'V2', x: 300, y: 200, state: 'unvisited' },\r\n      { id: 3, label: 'V3', x: 400, y: 200, state: 'unvisited' },\r\n      { id: 4, label: 'V4', x: 200, y: 300, state: 'unvisited' },\r\n      { id: 5, label: 'V5', x: 300, y: 300, state: 'unvisited' },\r\n      { id: 6, label: 'V6', x: 400, y: 300, state: 'unvisited' },\r\n    ];\r\n\r\n    const initialEdges = [\r\n      { from: 1, to: 2 },\r\n      { from: 2, to: 3 },\r\n      { from: 3, to: 6 },\r\n      { from: 1, to: 4 },\r\n      { from: 4, to: 5 },\r\n      { from: 5, to: 6 },\r\n    ];\r\n\r\n    setNodes(initialNodes);\r\n    setEdges(initialEdges);\r\n  };\r\n\r\n  const saveHistory = () => {\r\n    setHistory((prev) => [\r\n      ...prev,\r\n      { nodes: [...nodes], edges: [...edges] },\r\n    ]);\r\n  };\r\n\r\n  const startDFS = async () => {\r\n    if (isRunning) return;\r\n\r\n    const startNodeId = parseInt(prompt('Введіть ID початкової вершини:'), 10);\r\n    if (isNaN(startNodeId) || !nodes.some((node) => node.id === startNodeId)) {\r\n      alert('Некоректний ID початкової вершини');\r\n      return;\r\n    }\r\n\r\n    setIsRunning(true);\r\n    setIsPaused(false);\r\n    const visited = new Set();\r\n    const stack = [startNodeId];\r\n    setVisitedStack(stack);\r\n\r\n    while (stack.length > 0) {\r\n      if (isPaused) {\r\n        await new Promise((resolve) => {\r\n          const interval = setInterval(() => {\r\n            if (!isPaused) {\r\n              clearInterval(interval);\r\n              resolve();\r\n            }\r\n          }, 100);\r\n        });\r\n      }\r\n\r\n      const current = stack.pop();\r\n      setCurrentNode(current);\r\n      setStepHistory((prev) => [...prev, current]); // Зберігаємо попередній крок\r\n\r\n      setNodes((prev) =>\r\n        prev.map((node) =>\r\n          node.id === current ? { ...node, state: 'processing' } : node\r\n        )\r\n      );\r\n\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n      visited.add(current);\r\n\r\n      const neighbors = edges\r\n        .filter((edge) => edge.from === current && !visited.has(edge.to))\r\n        .map((edge) => edge.to);\r\n\r\n      neighbors.forEach((neighbor) => {\r\n        if (!visited.has(neighbor)) {\r\n          stack.push(neighbor);\r\n        }\r\n      });\r\n\r\n      setVisitedStack([...stack]);\r\n\r\n      setNodes((prev) =>\r\n        prev.map((node) =>\r\n          node.id === current ? { ...node, state: 'visited' } : node\r\n        )\r\n      );\r\n    }\r\n\r\n    setIsRunning(false);\r\n    setCurrentNode(null);\r\n  };\r\n\r\n  const pauseDFS = () => {\r\n    setIsPaused(!isPaused);\r\n  };\r\n\r\n  const undoDFS = () => {\r\n    if (stepHistory.length === 0) {\r\n      alert('Немає попередніх кроків для відкату.');\r\n      return;\r\n    }\r\n\r\n    const lastVisitedNode = stepHistory.pop();\r\n    setStepHistory([...stepHistory]);\r\n\r\n    setNodes((prev) =>\r\n      prev.map((node) =>\r\n        node.id === lastVisitedNode ? { ...node, state: 'unvisited' } : node\r\n      )\r\n    );\r\n    setVisitedStack((prev) => [...prev, lastVisitedNode]);\r\n    setCurrentNode(lastVisitedNode);\r\n  };\r\n\r\n  const renderGraph = () => (\r\n    <svg width=\"800\" height=\"600\">\r\n      {edges.map((edge, index) => {\r\n        const fromNode = nodes.find((node) => node.id === edge.from);\r\n        const toNode = nodes.find((node) => node.id === edge.to);\r\n        if (!fromNode || !toNode) return null;\r\n        return (\r\n          <line\r\n            key={index}\r\n            x1={fromNode.x}\r\n            y1={fromNode.y}\r\n            x2={toNode.x}\r\n            y2={toNode.y}\r\n            stroke=\"black\"\r\n            markerEnd=\"url(#arrowhead)\"\r\n          />\r\n        );\r\n      })}\r\n      <defs>\r\n        <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\" refX=\"10\" refY=\"3.5\" orient=\"auto\">\r\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n        </marker>\r\n      </defs>\r\n      {nodes.map((node) => (\r\n        <g key={node.id}>\r\n          <circle\r\n            cx={node.x}\r\n            cy={node.y}\r\n            r=\"20\"\r\n            fill={\r\n              node.state === 'unvisited'\r\n                ? 'gray'\r\n                : node.state === 'processing'\r\n                ? 'orange'\r\n                : 'black'\r\n            }\r\n          />\r\n          <text x={node.x} y={node.y + 5} textAnchor=\"middle\" fill=\"white\" fontSize=\"15\">\r\n            {node.label}\r\n          </text>\r\n        </g>\r\n      ))}\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <div className=\"graph-container\">\r\n      <h1>Алгоритм Глибокого Пошуку (DFS)</h1>\r\n      <div className=\"graph-area\">{renderGraph()}</div>\r\n      <div className=\"representation-controls\">\r\n        <button onClick={() => setRepresentation('matrix')}>Матриця Суміжності</button>\r\n        <button onClick={() => setRepresentation('edges')}>Список Ребер</button>\r\n      </div>\r\n      {representation === 'matrix' && <AdjacencyMatrix nodes={nodes} edges={edges} />}\r\n      {representation === 'edges' && <EdgeList edges={edges} />}\r\n      <div className=\"controls\">\r\n        <button onClick={startDFS}>Старт</button>\r\n        <button onClick={pauseDFS} disabled={!isRunning}>\r\n          {isPaused ? 'Продовжити' : 'Пауза'}\r\n        </button>\r\n        <button onClick={undoDFS} disabled={!isRunning}>\r\n          Назад\r\n        </button>\r\n        <Link to=\"/\">\r\n          <button>Home</button>\r\n        </Link>\r\n      </div>\r\n      {currentNode && <p>Поточна вершина: V{currentNode}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,QAAQ,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACd0B,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,YAAY,GAAG,CACnB;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC,EAC1D;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC,EAC1D;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC,EAC1D;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC,EAC1D;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC,EAC1D;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC,CAC3D;IAED,MAAMC,YAAY,GAAG,CACnB;MAAEC,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,CACnB;IAED1B,QAAQ,CAACkB,YAAY,CAAC;IACtBhB,QAAQ,CAACsB,YAAY,CAAC;EACxB,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBvB,UAAU,CAAEwB,IAAI,IAAK,CACnB,GAAGA,IAAI,EACP;MAAE7B,KAAK,EAAE,CAAC,GAAGA,KAAK,CAAC;MAAEE,KAAK,EAAE,CAAC,GAAGA,KAAK;IAAE,CAAC,CACzC,CAAC;EACJ,CAAC;EAED,MAAM4B,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAIxB,SAAS,EAAE;IAEf,MAAMyB,WAAW,GAAGC,QAAQ,CAACC,MAAM,CAAC,gCAAgC,CAAC,EAAE,EAAE,CAAC;IAC1E,IAAIC,KAAK,CAACH,WAAW,CAAC,IAAI,CAAC/B,KAAK,CAACmC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAAChB,EAAE,KAAKW,WAAW,CAAC,EAAE;MACxEM,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;IAEA9B,YAAY,CAAC,IAAI,CAAC;IAClBE,WAAW,CAAC,KAAK,CAAC;IAClB,MAAM6B,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;IACzB,MAAMC,KAAK,GAAG,CAACT,WAAW,CAAC;IAC3BlB,eAAe,CAAC2B,KAAK,CAAC;IAEtB,OAAOA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACvB,IAAIjC,QAAQ,EAAE;QACZ,MAAM,IAAIkC,OAAO,CAAEC,OAAO,IAAK;UAC7B,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;YACjC,IAAI,CAACrC,QAAQ,EAAE;cACbsC,aAAa,CAACF,QAAQ,CAAC;cACvBD,OAAO,CAAC,CAAC;YACX;UACF,CAAC,EAAE,GAAG,CAAC;QACT,CAAC,CAAC;MACJ;MAEA,MAAMI,OAAO,GAAGP,KAAK,CAACQ,GAAG,CAAC,CAAC;MAC3BrC,cAAc,CAACoC,OAAO,CAAC;MACvBhC,cAAc,CAAEc,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEkB,OAAO,CAAC,CAAC,CAAC,CAAC;;MAE9C9C,QAAQ,CAAE4B,IAAI,IACZA,IAAI,CAACoB,GAAG,CAAEb,IAAI,IACZA,IAAI,CAAChB,EAAE,KAAK2B,OAAO,GAAG;QAAE,GAAGX,IAAI;QAAEZ,KAAK,EAAE;MAAa,CAAC,GAAGY,IAC3D,CACF,CAAC;MAED,MAAM,IAAIM,OAAO,CAAEC,OAAO,IAAKO,UAAU,CAACP,OAAO,EAAE,IAAI,CAAC,CAAC;MAEzDL,OAAO,CAACa,GAAG,CAACJ,OAAO,CAAC;MAEpB,MAAMK,SAAS,GAAGlD,KAAK,CACpBmD,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAC5B,IAAI,KAAKqB,OAAO,IAAI,CAACT,OAAO,CAACiB,GAAG,CAACD,IAAI,CAAC3B,EAAE,CAAC,CAAC,CAChEsB,GAAG,CAAEK,IAAI,IAAKA,IAAI,CAAC3B,EAAE,CAAC;MAEzByB,SAAS,CAACI,OAAO,CAAEC,QAAQ,IAAK;QAC9B,IAAI,CAACnB,OAAO,CAACiB,GAAG,CAACE,QAAQ,CAAC,EAAE;UAC1BjB,KAAK,CAACkB,IAAI,CAACD,QAAQ,CAAC;QACtB;MACF,CAAC,CAAC;MAEF5C,eAAe,CAAC,CAAC,GAAG2B,KAAK,CAAC,CAAC;MAE3BvC,QAAQ,CAAE4B,IAAI,IACZA,IAAI,CAACoB,GAAG,CAAEb,IAAI,IACZA,IAAI,CAAChB,EAAE,KAAK2B,OAAO,GAAG;QAAE,GAAGX,IAAI;QAAEZ,KAAK,EAAE;MAAU,CAAC,GAAGY,IACxD,CACF,CAAC;IACH;IAEA7B,YAAY,CAAC,KAAK,CAAC;IACnBI,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMgD,QAAQ,GAAGA,CAAA,KAAM;IACrBlD,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,MAAMoD,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI9C,WAAW,CAAC2B,MAAM,KAAK,CAAC,EAAE;MAC5BJ,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IAEA,MAAMwB,eAAe,GAAG/C,WAAW,CAACkC,GAAG,CAAC,CAAC;IACzCjC,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAC,CAAC;IAEhCb,QAAQ,CAAE4B,IAAI,IACZA,IAAI,CAACoB,GAAG,CAAEb,IAAI,IACZA,IAAI,CAAChB,EAAE,KAAKyC,eAAe,GAAG;MAAE,GAAGzB,IAAI;MAAEZ,KAAK,EAAE;IAAY,CAAC,GAAGY,IAClE,CACF,CAAC;IACDvB,eAAe,CAAEgB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEgC,eAAe,CAAC,CAAC;IACrDlD,cAAc,CAACkD,eAAe,CAAC;EACjC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,kBAClBjE,OAAA;IAAKkE,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC,KAAK;IAAAC,QAAA,GAC1B/D,KAAK,CAAC+C,GAAG,CAAC,CAACK,IAAI,EAAEY,KAAK,KAAK;MAC1B,MAAMC,QAAQ,GAAGnE,KAAK,CAACoE,IAAI,CAAEhC,IAAI,IAAKA,IAAI,CAAChB,EAAE,KAAKkC,IAAI,CAAC5B,IAAI,CAAC;MAC5D,MAAM2C,MAAM,GAAGrE,KAAK,CAACoE,IAAI,CAAEhC,IAAI,IAAKA,IAAI,CAAChB,EAAE,KAAKkC,IAAI,CAAC3B,EAAE,CAAC;MACxD,IAAI,CAACwC,QAAQ,IAAI,CAACE,MAAM,EAAE,OAAO,IAAI;MACrC,oBACExE,OAAA;QAEEyE,EAAE,EAAEH,QAAQ,CAAC7C,CAAE;QACfiD,EAAE,EAAEJ,QAAQ,CAAC5C,CAAE;QACfiD,EAAE,EAAEH,MAAM,CAAC/C,CAAE;QACbmD,EAAE,EAAEJ,MAAM,CAAC9C,CAAE;QACbmD,MAAM,EAAC,OAAO;QACdC,SAAS,EAAC;MAAiB,GANtBT,KAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOX,CAAC;IAEN,CAAC,CAAC,eACFlF,OAAA;MAAAoE,QAAA,eACEpE,OAAA;QAAQuB,EAAE,EAAC,WAAW;QAAC4D,WAAW,EAAC,IAAI;QAACC,YAAY,EAAC,GAAG;QAACC,IAAI,EAAC,IAAI;QAACC,IAAI,EAAC,KAAK;QAACC,MAAM,EAAC,MAAM;QAAAnB,QAAA,eACzFpE,OAAA;UAASwF,MAAM,EAAC;QAAkB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACN/E,KAAK,CAACiD,GAAG,CAAEb,IAAI,iBACdvC,OAAA;MAAAoE,QAAA,gBACEpE,OAAA;QACEyF,EAAE,EAAElD,IAAI,CAACd,CAAE;QACXiE,EAAE,EAAEnD,IAAI,CAACb,CAAE;QACXiE,CAAC,EAAC,IAAI;QACNC,IAAI,EACFrD,IAAI,CAACZ,KAAK,KAAK,WAAW,GACtB,MAAM,GACNY,IAAI,CAACZ,KAAK,KAAK,YAAY,GAC3B,QAAQ,GACR;MACL;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFlF,OAAA;QAAMyB,CAAC,EAAEc,IAAI,CAACd,CAAE;QAACC,CAAC,EAAEa,IAAI,CAACb,CAAC,GAAG,CAAE;QAACmE,UAAU,EAAC,QAAQ;QAACD,IAAI,EAAC,OAAO;QAACE,QAAQ,EAAC,IAAI;QAAA1B,QAAA,EAC3E7B,IAAI,CAACf;MAAK;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA,GAfD3C,IAAI,CAAChB,EAAE;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBZ,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CACN;EAED,oBACElF,OAAA;IAAK+F,SAAS,EAAC,iBAAiB;IAAA3B,QAAA,gBAC9BpE,OAAA;MAAAoE,QAAA,EAAI;IAA+B;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxClF,OAAA;MAAK+F,SAAS,EAAC,YAAY;MAAA3B,QAAA,EAAEH,WAAW,CAAC;IAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjDlF,OAAA;MAAK+F,SAAS,EAAC,yBAAyB;MAAA3B,QAAA,gBACtCpE,OAAA;QAAQgG,OAAO,EAAEA,CAAA,KAAM5E,iBAAiB,CAAC,QAAQ,CAAE;QAAAgD,QAAA,EAAC;MAAkB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/ElF,OAAA;QAAQgG,OAAO,EAAEA,CAAA,KAAM5E,iBAAiB,CAAC,OAAO,CAAE;QAAAgD,QAAA,EAAC;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,EACL/D,cAAc,KAAK,QAAQ,iBAAInB,OAAA,CAACH,eAAe;MAACM,KAAK,EAAEA,KAAM;MAACE,KAAK,EAAEA;IAAM;MAAA0E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9E/D,cAAc,KAAK,OAAO,iBAAInB,OAAA,CAACF,QAAQ;MAACO,KAAK,EAAEA;IAAM;MAAA0E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDlF,OAAA;MAAK+F,SAAS,EAAC,UAAU;MAAA3B,QAAA,gBACvBpE,OAAA;QAAQgG,OAAO,EAAE/D,QAAS;QAAAmC,QAAA,EAAC;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzClF,OAAA;QAAQgG,OAAO,EAAElC,QAAS;QAACmC,QAAQ,EAAE,CAACxF,SAAU;QAAA2D,QAAA,EAC7CzD,QAAQ,GAAG,YAAY,GAAG;MAAO;QAAAoE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACTlF,OAAA;QAAQgG,OAAO,EAAEjC,OAAQ;QAACkC,QAAQ,EAAE,CAACxF,SAAU;QAAA2D,QAAA,EAAC;MAEhD;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTlF,OAAA,CAACJ,IAAI;QAACkC,EAAE,EAAC,GAAG;QAAAsC,QAAA,eACVpE,OAAA;UAAAoE,QAAA,EAAQ;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACLrE,WAAW,iBAAIb,OAAA;MAAAoE,QAAA,GAAG,0FAAkB,EAACvD,WAAW;IAAA;MAAAkE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAAChF,EAAA,CAzMID,KAAK;AAAAiG,EAAA,GAALjG,KAAK;AA2MX,eAAeA,KAAK;AAAC,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}