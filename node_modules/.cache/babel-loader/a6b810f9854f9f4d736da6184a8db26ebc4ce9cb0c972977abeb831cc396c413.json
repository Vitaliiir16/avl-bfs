{"ast":null,"code":"var _jsxFileName = \"D:\\\\kr\\\\src\\\\components\\\\Graph\\\\Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Graph.css';\nimport AdjacencyMatrix from './AdjacencyMatrix/AdjacencyMatrix';\nimport AdjacencyList from './AdjacencyList/AdjacencyList';\nimport EdgeList from './EdgeList/EdgeList';\nimport dfsAlgorithm from './dfsAlgorithm/dfsAlgorithm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = () => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [representation, setRepresentation] = useState('matrix');\n  useEffect(() => {\n    initializeGraph();\n  }, []);\n  const initializeGraph = () => {\n    const initialNodes = [{\n      id: 1,\n      label: 'V1',\n      x: 100,\n      y: 100,\n      state: 'unvisited'\n    }, {\n      id: 2,\n      label: 'V2',\n      x: 300,\n      y: 100,\n      state: 'unvisited'\n    }, {\n      id: 3,\n      label: 'V3',\n      x: 500,\n      y: 100,\n      state: 'unvisited'\n    }, {\n      id: 4,\n      label: 'V4',\n      x: 200,\n      y: 300,\n      state: 'unvisited'\n    }, {\n      id: 5,\n      label: 'V5',\n      x: 400,\n      y: 300,\n      state: 'unvisited'\n    }, {\n      id: 6,\n      label: 'V6',\n      x: 300,\n      y: 500,\n      state: 'unvisited'\n    }];\n    const initialEdges = [{\n      from: 1,\n      to: 2\n    }, {\n      from: 2,\n      to: 3\n    }, {\n      from: 3,\n      to: 4\n    }, {\n      from: 4,\n      to: 5\n    }, {\n      from: 5,\n      to: 6\n    }];\n    setNodes(initialNodes);\n    setEdges(initialEdges);\n  };\n  const saveHistory = () => {\n    setHistory([...history, {\n      nodes: [...nodes],\n      edges: [...edges]\n    }]);\n  };\n  const addNode = () => {\n    if (nodes.length >= 15) {\n      alert('Максимальна кількість вершин досягнута');\n      return;\n    }\n    const newNode = {\n      id: nodes.length + 1,\n      label: `V${nodes.length + 1}`,\n      x: Math.random() * 700 + 50,\n      y: Math.random() * 500 + 50,\n      state: 'unvisited'\n    };\n    saveHistory();\n    setNodes([...nodes, newNode]);\n  };\n  const deleteNode = () => {\n    const nodeId = parseInt(prompt('Введіть ID вершини для видалення:'), 10);\n    if (isNaN(nodeId) || !nodes.find(node => node.id === nodeId)) {\n      alert('Введено некоректний ID');\n      return;\n    }\n    saveHistory();\n    setNodes(nodes.filter(node => node.id !== nodeId));\n    setEdges(edges.filter(edge => edge.from !== nodeId && edge.to !== nodeId));\n  };\n  const addEdge = () => {\n    const fromId = parseInt(prompt('З якої вершини (ID)?'), 10);\n    const toId = parseInt(prompt('До якої вершини (ID)?'), 10);\n    if (isNaN(fromId) || isNaN(toId) || !nodes.find(node => node.id === fromId) || !nodes.find(node => node.id === toId)) {\n      alert('Некоректні ID вершин');\n      return;\n    }\n    saveHistory();\n    setEdges([...edges, {\n      from: fromId,\n      to: toId\n    }]);\n  };\n  const deleteEdge = () => {\n    const fromId = parseInt(prompt('З якої вершини видалити ребро (ID)?'), 10);\n    const toId = parseInt(prompt('До якої вершини видалити ребро (ID)?'), 10);\n    saveHistory();\n    setEdges(edges.filter(edge => !(edge.from === fromId && edge.to === toId)));\n  };\n  const startDFS = async () => {\n    const startNodeLabel = prompt('Введіть початкову вершину (наприклад, V1):');\n    const startNode = nodes.find(node => node.label === startNodeLabel);\n    if (!startNode) {\n      alert('Початкова вершина не знайдена');\n      return;\n    }\n    setIsRunning(true);\n    setIsPaused(false);\n    const pauseCheck = () => new Promise(resolve => {\n      const interval = setInterval(() => {\n        if (!isPaused) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, 100);\n    });\n    for (let i = 0; i < nodes.length; i++) {\n      if (isPaused) await pauseCheck();\n      await dfsAlgorithm(nodes, edges, startNode.id, setNodes);\n      if (!isRunning) break;\n    }\n    setIsRunning(false);\n  };\n  const pauseDFS = () => {\n    setIsPaused(!isPaused);\n  };\n  const undo = () => {\n    if (history.length === 0) {\n      alert('Немає попередніх станів для відкату.');\n      return;\n    }\n    const lastState = history.pop();\n    setNodes(lastState.nodes);\n    setEdges(lastState.edges);\n    setHistory(history);\n  };\n  const renderGraph = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"800\",\n    height: \"600\",\n    children: [edges.map((edge, index) => {\n      const fromNode = nodes.find(node => node.id === edge.from);\n      const toNode = nodes.find(node => node.id === edge.to);\n      if (!fromNode || !toNode) return null;\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: fromNode.x,\n        y1: fromNode.y,\n        x2: toNode.x,\n        y2: toNode.y,\n        stroke: \"black\",\n        markerEnd: \"url(#arrowhead)\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"arrowhead\",\n        markerWidth: \"10\",\n        markerHeight: \"7\",\n        refX: \"10\",\n        refY: \"3.5\",\n        orient: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n          points: \"0 0, 10 3.5, 0 7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), nodes.map(node => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: node.x,\n        cy: node.y,\n        r: \"20\",\n        fill: \"gray\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: node.x,\n        y: node.y + 5,\n        textAnchor: \"middle\",\n        fill: \"white\",\n        fontSize: \"15\",\n        children: node.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, node.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u043B\\u0433\\u043E\\u0440\\u0438\\u0442\\u043C \\u0413\\u043B\\u0438\\u0431\\u043E\\u043A\\u043E\\u0433\\u043E \\u041F\\u043E\\u0448\\u0443\\u043A\\u0443 (DFS)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-area\",\n      children: renderGraph()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"representation-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRepresentation('matrix'),\n        children: \"\\u041C\\u0430\\u0442\\u0440\\u0438\\u0446\\u044F \\u0421\\u0443\\u043C\\u0456\\u0436\\u043D\\u043E\\u0441\\u0442\\u0456\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRepresentation('list'),\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0421\\u0443\\u043C\\u0456\\u0436\\u043D\\u043E\\u0441\\u0442\\u0456\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRepresentation('edges'),\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0420\\u0435\\u0431\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), representation === 'matrix' && /*#__PURE__*/_jsxDEV(AdjacencyMatrix, {\n      nodes: nodes,\n      edges: edges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 39\n    }, this), representation === 'list' && /*#__PURE__*/_jsxDEV(AdjacencyList, {\n      nodes: nodes,\n      edges: edges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 37\n    }, this), representation === 'edges' && /*#__PURE__*/_jsxDEV(EdgeList, {\n      edges: edges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNode,\n        children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0412\\u0435\\u0440\\u0448\\u0438\\u043D\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNode,\n        children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438 \\u0412\\u0435\\u0440\\u0448\\u0438\\u043D\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addEdge,\n        children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0420\\u0435\\u0431\\u0440\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteEdge,\n        children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438 \\u0420\\u0435\\u0431\\u0440\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startDFS,\n        disabled: isRunning,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pauseDFS,\n        disabled: !isRunning,\n        children: isPaused ? 'Продовжити' : 'Пауза'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undo,\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"UAVVt0+txZ9NBmeJ/+SgIuDKNEY=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","Link","AdjacencyMatrix","AdjacencyList","EdgeList","dfsAlgorithm","jsxDEV","_jsxDEV","Graph","_s","nodes","setNodes","edges","setEdges","history","setHistory","isRunning","setIsRunning","isPaused","setIsPaused","representation","setRepresentation","initializeGraph","initialNodes","id","label","x","y","state","initialEdges","from","to","saveHistory","addNode","length","alert","newNode","Math","random","deleteNode","nodeId","parseInt","prompt","isNaN","find","node","filter","edge","addEdge","fromId","toId","deleteEdge","startDFS","startNodeLabel","startNode","pauseCheck","Promise","resolve","interval","setInterval","clearInterval","i","pauseDFS","undo","lastState","pop","renderGraph","width","height","children","map","index","fromNode","toNode","x1","y1","x2","y2","stroke","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","markerWidth","markerHeight","refX","refY","orient","points","cx","cy","r","fill","textAnchor","fontSize","className","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/kr/src/components/Graph/Graph.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Graph.css';\r\nimport AdjacencyMatrix from './AdjacencyMatrix/AdjacencyMatrix';\r\nimport AdjacencyList from './AdjacencyList/AdjacencyList';\r\nimport EdgeList from './EdgeList/EdgeList';\r\nimport dfsAlgorithm from './dfsAlgorithm/dfsAlgorithm';\r\n\r\nconst Graph = () => {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [representation, setRepresentation] = useState('matrix');\r\n\r\n  useEffect(() => {\r\n    initializeGraph();\r\n  }, []);\r\n\r\n  const initializeGraph = () => {\r\n    const initialNodes = [\r\n      { id: 1, label: 'V1', x: 100, y: 100, state: 'unvisited' },\r\n      { id: 2, label: 'V2', x: 300, y: 100, state: 'unvisited' },\r\n      { id: 3, label: 'V3', x: 500, y: 100, state: 'unvisited' },\r\n      { id: 4, label: 'V4', x: 200, y: 300, state: 'unvisited' },\r\n      { id: 5, label: 'V5', x: 400, y: 300, state: 'unvisited' },\r\n      { id: 6, label: 'V6', x: 300, y: 500, state: 'unvisited' },\r\n    ];\r\n\r\n    const initialEdges = [\r\n      { from: 1, to: 2 },\r\n      { from: 2, to: 3 },\r\n      { from: 3, to: 4 },\r\n      { from: 4, to: 5 },\r\n      { from: 5, to: 6 },\r\n    ];\r\n\r\n    setNodes(initialNodes);\r\n    setEdges(initialEdges);\r\n  };\r\n\r\n  const saveHistory = () => {\r\n    setHistory([...history, { nodes: [...nodes], edges: [...edges] }]);\r\n  };\r\n\r\n  const addNode = () => {\r\n    if (nodes.length >= 15) {\r\n      alert('Максимальна кількість вершин досягнута');\r\n      return;\r\n    }\r\n    const newNode = {\r\n      id: nodes.length + 1,\r\n      label: `V${nodes.length + 1}`,\r\n      x: Math.random() * 700 + 50,\r\n      y: Math.random() * 500 + 50,\r\n      state: 'unvisited',\r\n    };\r\n    saveHistory();\r\n    setNodes([...nodes, newNode]);\r\n  };\r\n\r\n  const deleteNode = () => {\r\n    const nodeId = parseInt(prompt('Введіть ID вершини для видалення:'), 10);\r\n    if (isNaN(nodeId) || !nodes.find((node) => node.id === nodeId)) {\r\n      alert('Введено некоректний ID');\r\n      return;\r\n    }\r\n    saveHistory();\r\n    setNodes(nodes.filter((node) => node.id !== nodeId));\r\n    setEdges(edges.filter((edge) => edge.from !== nodeId && edge.to !== nodeId));\r\n  };\r\n\r\n  const addEdge = () => {\r\n    const fromId = parseInt(prompt('З якої вершини (ID)?'), 10);\r\n    const toId = parseInt(prompt('До якої вершини (ID)?'), 10);\r\n    if (\r\n      isNaN(fromId) ||\r\n      isNaN(toId) ||\r\n      !nodes.find((node) => node.id === fromId) ||\r\n      !nodes.find((node) => node.id === toId)\r\n    ) {\r\n      alert('Некоректні ID вершин');\r\n      return;\r\n    }\r\n    saveHistory();\r\n    setEdges([...edges, { from: fromId, to: toId }]);\r\n  };\r\n\r\n  const deleteEdge = () => {\r\n    const fromId = parseInt(prompt('З якої вершини видалити ребро (ID)?'), 10);\r\n    const toId = parseInt(prompt('До якої вершини видалити ребро (ID)?'), 10);\r\n    saveHistory();\r\n    setEdges(edges.filter((edge) => !(edge.from === fromId && edge.to === toId)));\r\n  };\r\n\r\n  const startDFS = async () => {\r\n    const startNodeLabel = prompt('Введіть початкову вершину (наприклад, V1):');\r\n    const startNode = nodes.find((node) => node.label === startNodeLabel);\r\n    if (!startNode) {\r\n      alert('Початкова вершина не знайдена');\r\n      return;\r\n    }\r\n\r\n    setIsRunning(true);\r\n    setIsPaused(false);\r\n\r\n    const pauseCheck = () => new Promise((resolve) => {\r\n      const interval = setInterval(() => {\r\n        if (!isPaused) {\r\n          clearInterval(interval);\r\n          resolve();\r\n        }\r\n      }, 100);\r\n    });\r\n\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      if (isPaused) await pauseCheck();\r\n      await dfsAlgorithm(nodes, edges, startNode.id, setNodes);\r\n      if (!isRunning) break;\r\n    }\r\n\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const pauseDFS = () => {\r\n    setIsPaused(!isPaused);\r\n  };\r\n\r\n  const undo = () => {\r\n    if (history.length === 0) {\r\n      alert('Немає попередніх станів для відкату.');\r\n      return;\r\n    }\r\n    const lastState = history.pop();\r\n    setNodes(lastState.nodes);\r\n    setEdges(lastState.edges);\r\n    setHistory(history);\r\n  };\r\n\r\n  const renderGraph = () => (\r\n    <svg width=\"800\" height=\"600\">\r\n      {edges.map((edge, index) => {\r\n        const fromNode = nodes.find((node) => node.id === edge.from);\r\n        const toNode = nodes.find((node) => node.id === edge.to);\r\n        if (!fromNode || !toNode) return null;\r\n        return (\r\n          <line\r\n            key={index}\r\n            x1={fromNode.x}\r\n            y1={fromNode.y}\r\n            x2={toNode.x}\r\n            y2={toNode.y}\r\n            stroke=\"black\"\r\n            markerEnd=\"url(#arrowhead)\"\r\n          />\r\n        );\r\n      })}\r\n      <defs>\r\n        <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\" refX=\"10\" refY=\"3.5\" orient=\"auto\">\r\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n        </marker>\r\n      </defs>\r\n      {nodes.map((node) => (\r\n        <g key={node.id}>\r\n          <circle cx={node.x} cy={node.y} r=\"20\" fill=\"gray\" />\r\n          <text x={node.x} y={node.y + 5} textAnchor=\"middle\" fill=\"white\" fontSize=\"15\">\r\n            {node.label}\r\n          </text>\r\n        </g>\r\n      ))}\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <div className=\"graph-container\">\r\n      <h1>Алгоритм Глибокого Пошуку (DFS)</h1>\r\n      <div className=\"graph-area\">{renderGraph()}</div>\r\n      <div className=\"representation-controls\">\r\n        <button onClick={() => setRepresentation('matrix')}>Матриця Суміжності</button>\r\n        <button onClick={() => setRepresentation('list')}>Список Суміжності</button>\r\n        <button onClick={() => setRepresentation('edges')}>Список Ребер</button>\r\n      </div>\r\n      {representation === 'matrix' && <AdjacencyMatrix nodes={nodes} edges={edges} />}\r\n      {representation === 'list' && <AdjacencyList nodes={nodes} edges={edges} />}\r\n      {representation === 'edges' && <EdgeList edges={edges} />}\r\n      <div className=\"controls\">\r\n        <button onClick={addNode}>Додати Вершину</button>\r\n        <button onClick={deleteNode}>Видалити Вершину</button>\r\n        <button onClick={addEdge}>Додати Ребро</button>\r\n        <button onClick={deleteEdge}>Видалити Ребро</button>\r\n        <button onClick={startDFS} disabled={isRunning}>Start</button>\r\n        <button onClick={pauseDFS} disabled={!isRunning}>\r\n          {isPaused ? 'Продовжити' : 'Пауза'}\r\n        </button>\r\n        <button onClick={undo}>Назад</button>\r\n        <Link to=\"/\">\r\n          <button>Home</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,YAAY,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,QAAQ,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACdsB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,YAAY,GAAG,CACnB;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC,EAC1D;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC,EAC1D;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC,EAC1D;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC,EAC1D;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC,EAC1D;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAY,CAAC,CAC3D;IAED,MAAMC,YAAY,GAAG,CACnB;MAAEC,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAClB;MAAED,IAAI,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,CACnB;IAEDpB,QAAQ,CAACY,YAAY,CAAC;IACtBV,QAAQ,CAACgB,YAAY,CAAC;EACxB,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBjB,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MAAEJ,KAAK,EAAE,CAAC,GAAGA,KAAK,CAAC;MAAEE,KAAK,EAAE,CAAC,GAAGA,KAAK;IAAE,CAAC,CAAC,CAAC;EACpE,CAAC;EAED,MAAMqB,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIvB,KAAK,CAACwB,MAAM,IAAI,EAAE,EAAE;MACtBC,KAAK,CAAC,wCAAwC,CAAC;MAC/C;IACF;IACA,MAAMC,OAAO,GAAG;MACdZ,EAAE,EAAEd,KAAK,CAACwB,MAAM,GAAG,CAAC;MACpBT,KAAK,EAAE,IAAIf,KAAK,CAACwB,MAAM,GAAG,CAAC,EAAE;MAC7BR,CAAC,EAAEW,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE;MAC3BX,CAAC,EAAEU,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE;MAC3BV,KAAK,EAAE;IACT,CAAC;IACDI,WAAW,CAAC,CAAC;IACbrB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE0B,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,MAAM,CAAC,mCAAmC,CAAC,EAAE,EAAE,CAAC;IACxE,IAAIC,KAAK,CAACH,MAAM,CAAC,IAAI,CAAC9B,KAAK,CAACkC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKgB,MAAM,CAAC,EAAE;MAC9DL,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACF;IACAH,WAAW,CAAC,CAAC;IACbrB,QAAQ,CAACD,KAAK,CAACoC,MAAM,CAAED,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKgB,MAAM,CAAC,CAAC;IACpD3B,QAAQ,CAACD,KAAK,CAACkC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACjB,IAAI,KAAKU,MAAM,IAAIO,IAAI,CAAChB,EAAE,KAAKS,MAAM,CAAC,CAAC;EAC9E,CAAC;EAED,MAAMQ,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMC,MAAM,GAAGR,QAAQ,CAACC,MAAM,CAAC,sBAAsB,CAAC,EAAE,EAAE,CAAC;IAC3D,MAAMQ,IAAI,GAAGT,QAAQ,CAACC,MAAM,CAAC,uBAAuB,CAAC,EAAE,EAAE,CAAC;IAC1D,IACEC,KAAK,CAACM,MAAM,CAAC,IACbN,KAAK,CAACO,IAAI,CAAC,IACX,CAACxC,KAAK,CAACkC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKyB,MAAM,CAAC,IACzC,CAACvC,KAAK,CAACkC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAK0B,IAAI,CAAC,EACvC;MACAf,KAAK,CAAC,sBAAsB,CAAC;MAC7B;IACF;IACAH,WAAW,CAAC,CAAC;IACbnB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEkB,IAAI,EAAEmB,MAAM;MAAElB,EAAE,EAAEmB;IAAK,CAAC,CAAC,CAAC;EAClD,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMF,MAAM,GAAGR,QAAQ,CAACC,MAAM,CAAC,qCAAqC,CAAC,EAAE,EAAE,CAAC;IAC1E,MAAMQ,IAAI,GAAGT,QAAQ,CAACC,MAAM,CAAC,sCAAsC,CAAC,EAAE,EAAE,CAAC;IACzEV,WAAW,CAAC,CAAC;IACbnB,QAAQ,CAACD,KAAK,CAACkC,MAAM,CAAEC,IAAI,IAAK,EAAEA,IAAI,CAACjB,IAAI,KAAKmB,MAAM,IAAIF,IAAI,CAAChB,EAAE,KAAKmB,IAAI,CAAC,CAAC,CAAC;EAC/E,CAAC;EAED,MAAME,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,cAAc,GAAGX,MAAM,CAAC,4CAA4C,CAAC;IAC3E,MAAMY,SAAS,GAAG5C,KAAK,CAACkC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACpB,KAAK,KAAK4B,cAAc,CAAC;IACrE,IAAI,CAACC,SAAS,EAAE;MACdnB,KAAK,CAAC,+BAA+B,CAAC;MACtC;IACF;IAEAlB,YAAY,CAAC,IAAI,CAAC;IAClBE,WAAW,CAAC,KAAK,CAAC;IAElB,MAAMoC,UAAU,GAAGA,CAAA,KAAM,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAChD,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjC,IAAI,CAACzC,QAAQ,EAAE;UACb0C,aAAa,CAACF,QAAQ,CAAC;UACvBD,OAAO,CAAC,CAAC;QACX;MACF,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,CAAC;IAEF,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnD,KAAK,CAACwB,MAAM,EAAE2B,CAAC,EAAE,EAAE;MACrC,IAAI3C,QAAQ,EAAE,MAAMqC,UAAU,CAAC,CAAC;MAChC,MAAMlD,YAAY,CAACK,KAAK,EAAEE,KAAK,EAAE0C,SAAS,CAAC9B,EAAE,EAAEb,QAAQ,CAAC;MACxD,IAAI,CAACK,SAAS,EAAE;IAClB;IAEAC,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAM6C,QAAQ,GAAGA,CAAA,KAAM;IACrB3C,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,MAAM6C,IAAI,GAAGA,CAAA,KAAM;IACjB,IAAIjD,OAAO,CAACoB,MAAM,KAAK,CAAC,EAAE;MACxBC,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACF;IACA,MAAM6B,SAAS,GAAGlD,OAAO,CAACmD,GAAG,CAAC,CAAC;IAC/BtD,QAAQ,CAACqD,SAAS,CAACtD,KAAK,CAAC;IACzBG,QAAQ,CAACmD,SAAS,CAACpD,KAAK,CAAC;IACzBG,UAAU,CAACD,OAAO,CAAC;EACrB,CAAC;EAED,MAAMoD,WAAW,GAAGA,CAAA,kBAClB3D,OAAA;IAAK4D,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC,KAAK;IAAAC,QAAA,GAC1BzD,KAAK,CAAC0D,GAAG,CAAC,CAACvB,IAAI,EAAEwB,KAAK,KAAK;MAC1B,MAAMC,QAAQ,GAAG9D,KAAK,CAACkC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKuB,IAAI,CAACjB,IAAI,CAAC;MAC5D,MAAM2C,MAAM,GAAG/D,KAAK,CAACkC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKuB,IAAI,CAAChB,EAAE,CAAC;MACxD,IAAI,CAACyC,QAAQ,IAAI,CAACC,MAAM,EAAE,OAAO,IAAI;MACrC,oBACElE,OAAA;QAEEmE,EAAE,EAAEF,QAAQ,CAAC9C,CAAE;QACfiD,EAAE,EAAEH,QAAQ,CAAC7C,CAAE;QACfiD,EAAE,EAAEH,MAAM,CAAC/C,CAAE;QACbmD,EAAE,EAAEJ,MAAM,CAAC9C,CAAE;QACbmD,MAAM,EAAC,OAAO;QACdC,SAAS,EAAC;MAAiB,GANtBR,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOX,CAAC;IAEN,CAAC,CAAC,eACF5E,OAAA;MAAA8D,QAAA,eACE9D,OAAA;QAAQiB,EAAE,EAAC,WAAW;QAAC4D,WAAW,EAAC,IAAI;QAACC,YAAY,EAAC,GAAG;QAACC,IAAI,EAAC,IAAI;QAACC,IAAI,EAAC,KAAK;QAACC,MAAM,EAAC,MAAM;QAAAnB,QAAA,eACzF9D,OAAA;UAASkF,MAAM,EAAC;QAAkB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACNzE,KAAK,CAAC4D,GAAG,CAAEzB,IAAI,iBACdtC,OAAA;MAAA8D,QAAA,gBACE9D,OAAA;QAAQmF,EAAE,EAAE7C,IAAI,CAACnB,CAAE;QAACiE,EAAE,EAAE9C,IAAI,CAAClB,CAAE;QAACiE,CAAC,EAAC,IAAI;QAACC,IAAI,EAAC;MAAM;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrD5E,OAAA;QAAMmB,CAAC,EAAEmB,IAAI,CAACnB,CAAE;QAACC,CAAC,EAAEkB,IAAI,CAAClB,CAAC,GAAG,CAAE;QAACmE,UAAU,EAAC,QAAQ;QAACD,IAAI,EAAC,OAAO;QAACE,QAAQ,EAAC,IAAI;QAAA1B,QAAA,EAC3ExB,IAAI,CAACpB;MAAK;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA,GAJDtC,IAAI,CAACrB,EAAE;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKZ,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CACN;EAED,oBACE5E,OAAA;IAAKyF,SAAS,EAAC,iBAAiB;IAAA3B,QAAA,gBAC9B9D,OAAA;MAAA8D,QAAA,EAAI;IAA+B;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxC5E,OAAA;MAAKyF,SAAS,EAAC,YAAY;MAAA3B,QAAA,EAAEH,WAAW,CAAC;IAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjD5E,OAAA;MAAKyF,SAAS,EAAC,yBAAyB;MAAA3B,QAAA,gBACtC9D,OAAA;QAAQ0F,OAAO,EAAEA,CAAA,KAAM5E,iBAAiB,CAAC,QAAQ,CAAE;QAAAgD,QAAA,EAAC;MAAkB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/E5E,OAAA;QAAQ0F,OAAO,EAAEA,CAAA,KAAM5E,iBAAiB,CAAC,MAAM,CAAE;QAAAgD,QAAA,EAAC;MAAiB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5E5E,OAAA;QAAQ0F,OAAO,EAAEA,CAAA,KAAM5E,iBAAiB,CAAC,OAAO,CAAE;QAAAgD,QAAA,EAAC;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,EACL/D,cAAc,KAAK,QAAQ,iBAAIb,OAAA,CAACL,eAAe;MAACQ,KAAK,EAAEA,KAAM;MAACE,KAAK,EAAEA;IAAM;MAAAoE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9E/D,cAAc,KAAK,MAAM,iBAAIb,OAAA,CAACJ,aAAa;MAACO,KAAK,EAAEA,KAAM;MAACE,KAAK,EAAEA;IAAM;MAAAoE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1E/D,cAAc,KAAK,OAAO,iBAAIb,OAAA,CAACH,QAAQ;MAACQ,KAAK,EAAEA;IAAM;MAAAoE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzD5E,OAAA;MAAKyF,SAAS,EAAC,UAAU;MAAA3B,QAAA,gBACvB9D,OAAA;QAAQ0F,OAAO,EAAEhE,OAAQ;QAAAoC,QAAA,EAAC;MAAc;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjD5E,OAAA;QAAQ0F,OAAO,EAAE1D,UAAW;QAAA8B,QAAA,EAAC;MAAgB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtD5E,OAAA;QAAQ0F,OAAO,EAAEjD,OAAQ;QAAAqB,QAAA,EAAC;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/C5E,OAAA;QAAQ0F,OAAO,EAAE9C,UAAW;QAAAkB,QAAA,EAAC;MAAc;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpD5E,OAAA;QAAQ0F,OAAO,EAAE7C,QAAS;QAAC8C,QAAQ,EAAElF,SAAU;QAAAqD,QAAA,EAAC;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9D5E,OAAA;QAAQ0F,OAAO,EAAEnC,QAAS;QAACoC,QAAQ,EAAE,CAAClF,SAAU;QAAAqD,QAAA,EAC7CnD,QAAQ,GAAG,YAAY,GAAG;MAAO;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACT5E,OAAA;QAAQ0F,OAAO,EAAElC,IAAK;QAAAM,QAAA,EAAC;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrC5E,OAAA,CAACN,IAAI;QAAC8B,EAAE,EAAC,GAAG;QAAAsC,QAAA,eACV9D,OAAA;UAAA8D,QAAA,EAAQ;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1E,EAAA,CAlMID,KAAK;AAAA2F,EAAA,GAAL3F,KAAK;AAoMX,eAAeA,KAAK;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}