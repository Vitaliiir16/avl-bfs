{"ast":null,"code":"var _jsxFileName = \"D:\\\\kr\\\\src\\\\components\\\\Graph\\\\Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AdjacencyMatrix from './AdjacencyMatrix/AdjacencyMatrix';\nimport EdgeList from './EdgeList/EdgeList';\nimport './Graph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = () => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [targetNode, setTargetNode] = useState(null);\n  const [stepHistory, setStepHistory] = useState([]);\n  const [representation, setRepresentation] = useState('matrix');\n  useEffect(() => {\n    initializeGraph();\n  }, []);\n  const initializeGraph = () => {\n    const initialNodes = [{\n      id: 1,\n      label: 'V1',\n      x: 200,\n      y: 200,\n      state: 'unvisited'\n    }, {\n      id: 2,\n      label: 'V2',\n      x: 300,\n      y: 200,\n      state: 'unvisited'\n    }, {\n      id: 3,\n      label: 'V3',\n      x: 400,\n      y: 200,\n      state: 'unvisited'\n    }, {\n      id: 4,\n      label: 'V4',\n      x: 200,\n      y: 300,\n      state: 'unvisited'\n    }, {\n      id: 5,\n      label: 'V5',\n      x: 300,\n      y: 300,\n      state: 'unvisited'\n    }, {\n      id: 6,\n      label: 'V6',\n      x: 400,\n      y: 300,\n      state: 'unvisited'\n    }];\n    const initialEdges = [{\n      from: 1,\n      to: 2\n    }, {\n      from: 2,\n      to: 3\n    }, {\n      from: 3,\n      to: 6\n    }, {\n      from: 1,\n      to: 4\n    }, {\n      from: 4,\n      to: 5\n    }, {\n      from: 5,\n      to: 6\n    }];\n    setNodes(initialNodes);\n    setEdges(initialEdges);\n  };\n  const addNode = () => {\n    if (nodes.length >= 15) {\n      alert('Максимальна кількість вершин досягнута');\n      return;\n    }\n    const newNodeId = nodes.length + 1;\n    const newX = 200 + newNodeId % 3 * 100;\n    const newY = 200 + Math.floor((newNodeId - 1) / 3) * 100;\n    const newNode = {\n      id: newNodeId,\n      label: `V${newNodeId}`,\n      x: newX,\n      y: newY,\n      state: 'unvisited'\n    };\n    setNodes(prev => [...prev, newNode]);\n  };\n  const deleteNode = () => {\n    const nodeId = parseInt(prompt('Введіть ID вершини для видалення:'), 10);\n    if (isNaN(nodeId) || !nodes.some(node => node.id === nodeId)) {\n      alert('Некоректний ID вершини');\n      return;\n    }\n    setNodes(prev => prev.filter(node => node.id !== nodeId));\n    setEdges(prev => prev.filter(edge => edge.from !== nodeId && edge.to !== nodeId));\n  };\n  const addEdge = () => {\n    const fromId = parseInt(prompt('Введіть ID вихідної вершини:'), 10);\n    const toId = parseInt(prompt('Введіть ID цільової вершини:'), 10);\n    if (isNaN(fromId) || isNaN(toId) || !nodes.some(node => node.id === fromId) || !nodes.some(node => node.id === toId)) {\n      alert('Некоректні ID вершин');\n      return;\n    }\n    setEdges(prev => [...prev, {\n      from: fromId,\n      to: toId\n    }]);\n  };\n  const deleteEdge = () => {\n    const fromId = parseInt(prompt('Введіть ID вихідної вершини для видалення ребра:'), 10);\n    const toId = parseInt(prompt('Введіть ID цільової вершини для видалення ребра:'), 10);\n    if (isNaN(fromId) || isNaN(toId) || !edges.some(edge => edge.from === fromId && edge.to === toId)) {\n      alert('Ребро не знайдено');\n      return;\n    }\n    setEdges(prev => prev.filter(edge => !(edge.from === fromId && edge.to === toId)));\n  };\n  const startDFS = async () => {\n    if (isRunning) return;\n    const startNodeId = parseInt(prompt('Введіть ID початкової вершини:'), 10);\n    const endNodeId = parseInt(prompt('Введіть ID кінцевої вершини:'), 10);\n    if (isNaN(startNodeId) || isNaN(endNodeId) || !nodes.some(node => node.id === startNodeId) || !nodes.some(node => node.id === endNodeId)) {\n      alert('Некоректний ID вершини');\n      return;\n    }\n    setIsRunning(true);\n    setIsPaused(false);\n    setTargetNode(endNodeId);\n    const visited = new Set();\n    const stack = [startNodeId];\n    setStepHistory([startNodeId]);\n    while (stack.length > 0) {\n      if (isPaused) {\n        await new Promise(resolve => {\n          const interval = setInterval(() => {\n            if (!isPaused) {\n              clearInterval(interval);\n              resolve();\n            }\n          }, 100);\n        });\n      }\n      const current = stack.pop();\n      setCurrentNode(current);\n      if (current === endNodeId) {\n        setNodes(prev => prev.map(node => node.id === current ? {\n          ...node,\n          state: 'target'\n        } : node));\n        alert(`Знайдено кінцеву вершину V${endNodeId}`);\n        break;\n      }\n      setNodes(prev => prev.map(node => node.id === current ? {\n        ...node,\n        state: 'processing'\n      } : node));\n      await new Promise(resolve => setTimeout(resolve, 10));\n      visited.add(current);\n      const neighbors = edges.filter(edge => edge.from === current && !visited.has(edge.to)).map(edge => edge.to);\n      neighbors.forEach(neighbor => {\n        if (!visited.has(neighbor)) {\n          stack.push(neighbor);\n        }\n      });\n      setStepHistory(prev => [...prev, current]);\n      setNodes(prev => prev.map(node => node.id === current ? {\n        ...node,\n        state: 'visited'\n      } : node));\n    }\n    setIsRunning(false);\n    setCurrentNode(null);\n  };\n  const pauseDFS = () => {\n    setIsPaused(prev => !prev);\n  };\n  const undoDFS = () => {\n    if (stepHistory.length <= 1) {\n      alert('Немає попередніх кроків для відкату.');\n      return;\n    }\n    const lastVisitedNode = stepHistory.pop();\n    const previousNode = stepHistory[stepHistory.length - 1] || null;\n    setStepHistory([...stepHistory]);\n    setNodes(prev => prev.map(node => {\n      if (node.id === lastVisitedNode) return {\n        ...node,\n        state: 'unvisited'\n      };\n      if (node.id === previousNode) return {\n        ...node,\n        state: 'processing'\n      };\n      return node;\n    }));\n    setCurrentNode(previousNode);\n  };\n  const resetGraph = () => {\n    setNodes(prev => prev.map(node => ({\n      ...node,\n      state: 'unvisited'\n    })));\n    setStepHistory([]);\n    setCurrentNode(null);\n    setTargetNode(null);\n    setIsRunning(false);\n    setIsPaused(false);\n  };\n  const renderGraph = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"800\",\n    height: \"600\",\n    children: [edges.map((edge, index) => {\n      const fromNode = nodes.find(node => node.id === edge.from);\n      const toNode = nodes.find(node => node.id === edge.to);\n      if (!fromNode || !toNode) return null;\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: fromNode.x,\n        y1: fromNode.y,\n        x2: toNode.x,\n        y2: toNode.y,\n        stroke: \"black\",\n        markerEnd: \"url(#arrowhead)\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"arrowhead\",\n        markerWidth: \"10\",\n        markerHeight: \"7\",\n        refX: \"10\",\n        refY: \"3.5\",\n        orient: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n          points: \"0 0, 10 3.5, 0 7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), nodes.map(node => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: node.x,\n        cy: node.y,\n        r: \"20\",\n        fill: node.id === targetNode ? 'green' : node.state === 'unvisited' ? 'gray' : node.state === 'processing' ? 'orange' : 'black'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: node.x,\n        y: node.y + 5,\n        textAnchor: \"middle\",\n        fill: \"white\",\n        fontSize: \"15\",\n        children: node.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, node.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u043B\\u0433\\u043E\\u0440\\u0438\\u0442\\u043C \\u041F\\u043E\\u0448\\u0443\\u043A\\u0443 \\u0432 \\u0413\\u043B\\u0438\\u0431\\u0438\\u043D\\u0443 (DFS)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-area\",\n      children: renderGraph()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"representation-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRepresentation('matrix'),\n        children: \"\\u041C\\u0430\\u0442\\u0440\\u0438\\u0446\\u044F \\u0421\\u0443\\u043C\\u0456\\u0436\\u043D\\u043E\\u0441\\u0442\\u0456\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRepresentation('edges'),\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0420\\u0435\\u0431\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), representation === 'matrix' && /*#__PURE__*/_jsxDEV(AdjacencyMatrix, {\n      nodes: nodes,\n      edges: edges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 39\n    }, this), representation === 'edges' && /*#__PURE__*/_jsxDEV(EdgeList, {\n      edges: edges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNode,\n        children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0412\\u0435\\u0440\\u0448\\u0438\\u043D\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNode,\n        children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438 \\u0412\\u0435\\u0440\\u0448\\u0438\\u043D\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addEdge,\n        children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0420\\u0435\\u0431\\u0440\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteEdge,\n        children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438 \\u0420\\u0435\\u0431\\u0440\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startDFS,\n        children: \"\\u0421\\u0442\\u0430\\u0440\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pauseDFS,\n        disabled: !isRunning,\n        children: isPaused ? 'Продовжити' : 'Пауза'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undoDFS,\n        disabled: !isRunning,\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGraph,\n        children: \"\\u0417\\u0430\\u0431\\u0443\\u0442\\u0438 \\u043F\\u043E\\u0448\\u0443\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), currentNode && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041F\\u043E\\u0442\\u043E\\u0447\\u043D\\u0430 \\u0432\\u0435\\u0440\\u0448\\u0438\\u043D\\u0430: V\", currentNode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"n8nnEWvtPw9122uh6Ybcu1zibME=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","Link","AdjacencyMatrix","EdgeList","jsxDEV","_jsxDEV","Graph","_s","nodes","setNodes","edges","setEdges","isRunning","setIsRunning","isPaused","setIsPaused","currentNode","setCurrentNode","targetNode","setTargetNode","stepHistory","setStepHistory","representation","setRepresentation","initializeGraph","initialNodes","id","label","x","y","state","initialEdges","from","to","addNode","length","alert","newNodeId","newX","newY","Math","floor","newNode","prev","deleteNode","nodeId","parseInt","prompt","isNaN","some","node","filter","edge","addEdge","fromId","toId","deleteEdge","startDFS","startNodeId","endNodeId","visited","Set","stack","Promise","resolve","interval","setInterval","clearInterval","current","pop","map","setTimeout","add","neighbors","has","forEach","neighbor","push","pauseDFS","undoDFS","lastVisitedNode","previousNode","resetGraph","renderGraph","width","height","children","index","fromNode","find","toNode","x1","y1","x2","y2","stroke","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","markerWidth","markerHeight","refX","refY","orient","points","cx","cy","r","fill","textAnchor","fontSize","className","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/kr/src/components/Graph/Graph.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AdjacencyMatrix from './AdjacencyMatrix/AdjacencyMatrix';\r\nimport EdgeList from './EdgeList/EdgeList';\r\nimport './Graph.css';\r\n\r\nconst Graph = () => {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [currentNode, setCurrentNode] = useState(null);\r\n  const [targetNode, setTargetNode] = useState(null);\r\n  const [stepHistory, setStepHistory] = useState([]); \r\n  const [representation, setRepresentation] = useState('matrix');\r\n\r\n  useEffect(() => {\r\n    initializeGraph();\r\n  }, []);\r\n\r\n  const initializeGraph = () => {\r\n    const initialNodes = [\r\n      { id: 1, label: 'V1', x: 200, y: 200, state: 'unvisited' },\r\n      { id: 2, label: 'V2', x: 300, y: 200, state: 'unvisited' },\r\n      { id: 3, label: 'V3', x: 400, y: 200, state: 'unvisited' },\r\n      { id: 4, label: 'V4', x: 200, y: 300, state: 'unvisited' },\r\n      { id: 5, label: 'V5', x: 300, y: 300, state: 'unvisited' },\r\n      { id: 6, label: 'V6', x: 400, y: 300, state: 'unvisited' },\r\n    ];\r\n\r\n    const initialEdges = [\r\n      { from: 1, to: 2 },\r\n      { from: 2, to: 3 },\r\n      { from: 3, to: 6 },\r\n      { from: 1, to: 4 },\r\n      { from: 4, to: 5 },\r\n      { from: 5, to: 6 },\r\n    ];\r\n\r\n    setNodes(initialNodes);\r\n    setEdges(initialEdges);\r\n  };\r\n\r\n  const addNode = () => {\r\n    if (nodes.length >= 15) {\r\n      alert('Максимальна кількість вершин досягнута');\r\n      return;\r\n    }\r\n\r\n    const newNodeId = nodes.length + 1;\r\n    const newX = 200 + (newNodeId % 3) * 100;\r\n    const newY = 200 + Math.floor((newNodeId - 1) / 3) * 100;\r\n\r\n    const newNode = {\r\n      id: newNodeId,\r\n      label: `V${newNodeId}`,\r\n      x: newX,\r\n      y: newY,\r\n      state: 'unvisited',\r\n    };\r\n\r\n    setNodes((prev) => [...prev, newNode]);\r\n  };\r\n\r\n  const deleteNode = () => {\r\n    const nodeId = parseInt(prompt('Введіть ID вершини для видалення:'), 10);\r\n    if (isNaN(nodeId) || !nodes.some((node) => node.id === nodeId)) {\r\n      alert('Некоректний ID вершини');\r\n      return;\r\n    }\r\n\r\n    setNodes((prev) => prev.filter((node) => node.id !== nodeId));\r\n    setEdges((prev) => prev.filter((edge) => edge.from !== nodeId && edge.to !== nodeId));\r\n  };\r\n\r\n  const addEdge = () => {\r\n    const fromId = parseInt(prompt('Введіть ID вихідної вершини:'), 10);\r\n    const toId = parseInt(prompt('Введіть ID цільової вершини:'), 10);\r\n\r\n    if (\r\n      isNaN(fromId) ||\r\n      isNaN(toId) ||\r\n      !nodes.some((node) => node.id === fromId) ||\r\n      !nodes.some((node) => node.id === toId)\r\n    ) {\r\n      alert('Некоректні ID вершин');\r\n      return;\r\n    }\r\n\r\n    setEdges((prev) => [...prev, { from: fromId, to: toId }]);\r\n  };\r\n\r\n  const deleteEdge = () => {\r\n    const fromId = parseInt(prompt('Введіть ID вихідної вершини для видалення ребра:'), 10);\r\n    const toId = parseInt(prompt('Введіть ID цільової вершини для видалення ребра:'), 10);\r\n\r\n    if (\r\n      isNaN(fromId) ||\r\n      isNaN(toId) ||\r\n      !edges.some((edge) => edge.from === fromId && edge.to === toId)\r\n    ) {\r\n      alert('Ребро не знайдено');\r\n      return;\r\n    }\r\n\r\n    setEdges((prev) => prev.filter((edge) => !(edge.from === fromId && edge.to === toId)));\r\n  };\r\n\r\n  const startDFS = async () => {\r\n    if (isRunning) return;\r\n  \r\n    const startNodeId = parseInt(prompt('Введіть ID початкової вершини:'), 10);\r\n    const endNodeId = parseInt(prompt('Введіть ID кінцевої вершини:'), 10);\r\n  \r\n    if (\r\n      isNaN(startNodeId) ||\r\n      isNaN(endNodeId) ||\r\n      !nodes.some((node) => node.id === startNodeId) ||\r\n      !nodes.some((node) => node.id === endNodeId)\r\n    ) {\r\n      alert('Некоректний ID вершини');\r\n      return;\r\n    }\r\n  \r\n    setIsRunning(true);\r\n    setIsPaused(false);\r\n    setTargetNode(endNodeId);\r\n    const visited = new Set();\r\n    const stack = [startNodeId];\r\n    setStepHistory([startNodeId]);\r\n  \r\n    while (stack.length > 0) {\r\n      if (isPaused) {\r\n        await new Promise((resolve) => {\r\n          const interval = setInterval(() => {\r\n            if (!isPaused) {\r\n              clearInterval(interval);\r\n              resolve();\r\n            }\r\n          }, 100);\r\n        });\r\n      }\r\n  \r\n      const current = stack.pop();\r\n      setCurrentNode(current);\r\n  \r\n      if (current === endNodeId) {\r\n        setNodes((prev) =>\r\n          prev.map((node) =>\r\n            node.id === current ? { ...node, state: 'target' } : node\r\n          )\r\n        );\r\n        alert(`Знайдено кінцеву вершину V${endNodeId}`);\r\n        break;\r\n      }\r\n  \r\n      setNodes((prev) =>\r\n        prev.map((node) =>\r\n          node.id === current ? { ...node, state: 'processing' } : node\r\n        )\r\n      );\r\n  \r\n      await new Promise((resolve) => setTimeout(resolve, 10));\r\n  \r\n      visited.add(current);\r\n  \r\n      const neighbors = edges\r\n        .filter((edge) => edge.from === current && !visited.has(edge.to))\r\n        .map((edge) => edge.to);\r\n  \r\n      neighbors.forEach((neighbor) => {\r\n        if (!visited.has(neighbor)) {\r\n          stack.push(neighbor);\r\n        }\r\n      });\r\n  \r\n      setStepHistory((prev) => [...prev, current]);\r\n      setNodes((prev) =>\r\n        prev.map((node) =>\r\n          node.id === current ? { ...node, state: 'visited' } : node\r\n        )\r\n      );\r\n    }\r\n  \r\n    setIsRunning(false);\r\n    setCurrentNode(null);\r\n  };\r\n  \r\n  \r\n\r\n  const pauseDFS = () => {\r\n    setIsPaused((prev) => !prev);\r\n  };\r\n  \r\n  const undoDFS = () => {\r\n    if (stepHistory.length <= 1) {\r\n      alert('Немає попередніх кроків для відкату.');\r\n      return;\r\n    }\r\n\r\n    const lastVisitedNode = stepHistory.pop();\r\n    const previousNode = stepHistory[stepHistory.length - 1] || null;\r\n\r\n    setStepHistory([...stepHistory]);\r\n\r\n    setNodes((prev) =>\r\n      prev.map((node) => {\r\n        if (node.id === lastVisitedNode) return { ...node, state: 'unvisited' };\r\n        if (node.id === previousNode) return { ...node, state: 'processing' };\r\n        return node;\r\n      })\r\n    );\r\n\r\n    setCurrentNode(previousNode);\r\n  };\r\n\r\n  const resetGraph = () => {\r\n    setNodes((prev) =>\r\n      prev.map((node) => ({\r\n        ...node,\r\n        state: 'unvisited',\r\n      }))\r\n    );\r\n    setStepHistory([]);\r\n    setCurrentNode(null);\r\n    setTargetNode(null);\r\n    setIsRunning(false);\r\n    setIsPaused(false);\r\n  };\r\n\r\n  const renderGraph = () => (\r\n    <svg width=\"800\" height=\"600\">\r\n      {edges.map((edge, index) => {\r\n        const fromNode = nodes.find((node) => node.id === edge.from);\r\n        const toNode = nodes.find((node) => node.id === edge.to);\r\n        if (!fromNode || !toNode) return null;\r\n        return (\r\n          <line\r\n            key={index}\r\n            x1={fromNode.x}\r\n            y1={fromNode.y}\r\n            x2={toNode.x}\r\n            y2={toNode.y}\r\n            stroke=\"black\"\r\n            markerEnd=\"url(#arrowhead)\"\r\n          />\r\n        );\r\n      })}\r\n      <defs>\r\n        <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\" refX=\"10\" refY=\"3.5\" orient=\"auto\">\r\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n        </marker>\r\n      </defs>\r\n      {nodes.map((node) => (\r\n        <g key={node.id}>\r\n          <circle\r\n            cx={node.x}\r\n            cy={node.y}\r\n            r=\"20\"\r\n            fill={\r\n              node.id === targetNode\r\n                ? 'green' \r\n                : node.state === 'unvisited'\r\n                ? 'gray'\r\n                : node.state === 'processing'\r\n                ? 'orange'\r\n                : 'black'\r\n            }\r\n          />\r\n          <text x={node.x} y={node.y + 5} textAnchor=\"middle\" fill=\"white\" fontSize=\"15\">\r\n            {node.label}\r\n          </text>\r\n        </g>\r\n      ))}\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <div className=\"graph-container\">\r\n      <h1>Алгоритм Пошуку в Глибину (DFS)</h1>\r\n      <div className=\"graph-area\">{renderGraph()}</div>\r\n      <div className=\"representation-controls\">\r\n        <button onClick={() => setRepresentation('matrix')}>Матриця Суміжності</button>\r\n        <button onClick={() => setRepresentation('edges')}>Список Ребер</button>\r\n      </div>\r\n      {representation === 'matrix' && <AdjacencyMatrix nodes={nodes} edges={edges} />}\r\n      {representation === 'edges' && <EdgeList edges={edges} />}\r\n      <div className=\"controls\">\r\n        <button onClick={addNode}>Додати Вершину</button>\r\n        <button onClick={deleteNode}>Видалити Вершину</button>\r\n        <button onClick={addEdge}>Додати Ребро</button>\r\n        <button onClick={deleteEdge}>Видалити Ребро</button>\r\n        <button onClick={startDFS}>Старт</button>\r\n        <button onClick={pauseDFS} disabled={!isRunning}>\r\n          {isPaused ? 'Продовжити' : 'Пауза'}\r\n        </button>\r\n        <button onClick={undoDFS} disabled={!isRunning}>\r\n          Назад\r\n        </button>\r\n        <button onClick={resetGraph}>Забути пошук</button>\r\n        <Link to=\"/\">\r\n          <button>Home</button>\r\n        </Link>\r\n      </div>\r\n      {currentNode && <p>Поточна вершина: V{currentNode}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}