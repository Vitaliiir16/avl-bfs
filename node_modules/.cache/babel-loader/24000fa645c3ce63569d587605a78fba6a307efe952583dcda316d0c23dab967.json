{"ast":null,"code":"var _jsxFileName = \"D:\\\\kr-var-18-rbt-dfs\\\\src\\\\components\\\\Graph\\\\list\\\\List.jsx\";\nimport React from 'react';\nimport './List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  edges\n}) => {\n  // Створюємо список суміжності на основі масиву ребер\n  const adjacencyList = edges.reduce((acc, edge) => {\n    if (!acc[edge.from]) {\n      acc[edge.from] = [];\n    }\n    acc[edge.from].push(edge.to);\n    return acc;\n  }, {});\n\n  // Відсортуємо вершини за їх ID для більш зрозумілого відображення\n  const nodeIds = Object.keys(adjacencyList).map(Number).sort((a, b) => a - b);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0421\\u0443\\u043C\\u0456\\u0436\\u043D\\u043E\\u0441\\u0442\\u0456\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: nodeIds.map(nodeId => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"V\", nodeId, \": \", adjacencyList[nodeId].map(to => `V${to}`).join(', ')]\n      }, nodeId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","List","edges","adjacencyList","reduce","acc","edge","from","push","to","nodeIds","Object","keys","map","Number","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","nodeId","join","_c","$RefreshReg$"],"sources":["D:/kr-var-18-rbt-dfs/src/components/Graph/list/List.jsx"],"sourcesContent":["import React from 'react';\r\nimport './List.css';\r\n\r\nconst List = ({ edges }) => {\r\n  // Створюємо список суміжності на основі масиву ребер\r\n  const adjacencyList = edges.reduce((acc, edge) => {\r\n    if (!acc[edge.from]) {\r\n      acc[edge.from] = [];\r\n    }\r\n    acc[edge.from].push(edge.to);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Відсортуємо вершини за їх ID для більш зрозумілого відображення\r\n  const nodeIds = Object.keys(adjacencyList).map(Number).sort((a, b) => a - b);\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      <h3>Список Суміжності</h3>\r\n      <ul>\r\n        {nodeIds.map(nodeId => (\r\n          <li key={nodeId}>\r\n            V{nodeId}: {adjacencyList[nodeId].map(to => `V${to}`).join(', ')}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC1B;EACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAChD,IAAI,CAACD,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,EAAE;MACnBF,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,GAAG,EAAE;IACrB;IACAF,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,CAACC,IAAI,CAACF,IAAI,CAACG,EAAE,CAAC;IAC5B,OAAOJ,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAMK,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACT,aAAa,CAAC,CAACU,GAAG,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;EAE5E,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBnB,OAAA;MAAAmB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BvB,OAAA;MAAAmB,QAAA,EACGT,OAAO,CAACG,GAAG,CAACW,MAAM,iBACjBxB,OAAA;QAAAmB,QAAA,GAAiB,GACd,EAACK,MAAM,EAAC,IAAE,EAACrB,aAAa,CAACqB,MAAM,CAAC,CAACX,GAAG,CAACJ,EAAE,IAAI,IAAIA,EAAE,EAAE,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC;MAAA,GADzDD,MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACG,EAAA,GAzBIzB,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}