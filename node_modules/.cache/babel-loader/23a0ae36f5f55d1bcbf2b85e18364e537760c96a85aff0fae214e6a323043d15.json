{"ast":null,"code":"var _jsxFileName = \"D:\\\\kr\\\\src\\\\components\\\\Graph\\\\Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AdjacencyMatrix from './AdjacencyMatrix/AdjacencyMatrix';\nimport EdgeList from './EdgeList/EdgeList';\nimport './Graph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = () => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [currentNode, setCurrentNode] = useState(null);\n  const [stepHistory, setStepHistory] = useState([]); // Історія для кнопки \"Назад\"\n  const [representation, setRepresentation] = useState('matrix');\n  useEffect(() => {\n    initializeGraph();\n  }, []);\n  const initializeGraph = () => {\n    const initialNodes = [{\n      id: 1,\n      label: 'V1',\n      x: 200,\n      y: 200,\n      state: 'unvisited'\n    }, {\n      id: 2,\n      label: 'V2',\n      x: 300,\n      y: 200,\n      state: 'unvisited'\n    }, {\n      id: 3,\n      label: 'V3',\n      x: 400,\n      y: 200,\n      state: 'unvisited'\n    }, {\n      id: 4,\n      label: 'V4',\n      x: 200,\n      y: 300,\n      state: 'unvisited'\n    }, {\n      id: 5,\n      label: 'V5',\n      x: 300,\n      y: 300,\n      state: 'unvisited'\n    }, {\n      id: 6,\n      label: 'V6',\n      x: 400,\n      y: 300,\n      state: 'unvisited'\n    }];\n    const initialEdges = [{\n      from: 1,\n      to: 2\n    }, {\n      from: 2,\n      to: 3\n    }, {\n      from: 3,\n      to: 6\n    }, {\n      from: 1,\n      to: 4\n    }, {\n      from: 4,\n      to: 5\n    }, {\n      from: 5,\n      to: 6\n    }];\n    setNodes(initialNodes);\n    setEdges(initialEdges);\n  };\n  const startDFS = async () => {\n    if (isRunning) return;\n    const startNodeId = parseInt(prompt('Введіть ID початкової вершини:'), 10);\n    if (isNaN(startNodeId) || !nodes.some(node => node.id === startNodeId)) {\n      alert('Некоректний ID початкової вершини');\n      return;\n    }\n    setIsRunning(true);\n    setIsPaused(false);\n    const visited = new Set();\n    const stack = [startNodeId];\n    setStepHistory([startNodeId]); // Початкова вершина для кнопки \"Назад\"\n\n    while (stack.length > 0) {\n      // Очікування при паузі\n      while (isPaused) {\n        await new Promise(resolve => setTimeout(resolve, 100));\n      }\n      const current = stack.pop();\n      setCurrentNode(current);\n      setNodes(prev => prev.map(node => node.id === current ? {\n        ...node,\n        state: 'processing'\n      } : node));\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      visited.add(current);\n      const neighbors = edges.filter(edge => edge.from === current && !visited.has(edge.to)).map(edge => edge.to);\n      neighbors.forEach(neighbor => {\n        if (!visited.has(neighbor)) {\n          stack.push(neighbor);\n        }\n      });\n      setStepHistory(prev => [...prev, current]); // Додаємо вузол до історії\n      setNodes(prev => prev.map(node => node.id === current ? {\n        ...node,\n        state: 'visited'\n      } : node));\n    }\n    setIsRunning(false);\n    setCurrentNode(null);\n  };\n  const pauseDFS = () => {\n    setIsPaused(!isPaused);\n  };\n  const undoDFS = () => {\n    if (stepHistory.length <= 1) {\n      alert('Немає попередніх кроків для відкату.');\n      return;\n    }\n    const lastVisitedNode = stepHistory.pop();\n    setStepHistory([...stepHistory]);\n    setNodes(prev => prev.map(node => node.id === lastVisitedNode ? {\n      ...node,\n      state: 'unvisited'\n    } : node));\n    setCurrentNode(stepHistory[stepHistory.length - 1] || null);\n  };\n  const resetGraph = () => {\n    setNodes(prev => prev.map(node => ({\n      ...node,\n      state: 'unvisited'\n    })));\n    setStepHistory([]);\n    setCurrentNode(null);\n    setIsRunning(false);\n    setIsPaused(false);\n  };\n  const renderGraph = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"800\",\n    height: \"600\",\n    children: [edges.map((edge, index) => {\n      const fromNode = nodes.find(node => node.id === edge.from);\n      const toNode = nodes.find(node => node.id === edge.to);\n      if (!fromNode || !toNode) return null;\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: fromNode.x,\n        y1: fromNode.y,\n        x2: toNode.x,\n        y2: toNode.y,\n        stroke: \"black\",\n        markerEnd: \"url(#arrowhead)\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"marker\", {\n        id: \"arrowhead\",\n        markerWidth: \"10\",\n        markerHeight: \"7\",\n        refX: \"10\",\n        refY: \"3.5\",\n        orient: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n          points: \"0 0, 10 3.5, 0 7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), nodes.map(node => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: node.x,\n        cy: node.y,\n        r: \"20\",\n        fill: node.state === 'unvisited' ? 'gray' : node.state === 'processing' ? 'orange' : 'black'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: node.x,\n        y: node.y + 5,\n        textAnchor: \"middle\",\n        fill: \"white\",\n        fontSize: \"15\",\n        children: node.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, node.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u043B\\u0433\\u043E\\u0440\\u0438\\u0442\\u043C \\u0413\\u043B\\u0438\\u0431\\u043E\\u043A\\u043E\\u0433\\u043E \\u041F\\u043E\\u0448\\u0443\\u043A\\u0443 (DFS)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-area\",\n      children: renderGraph()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"representation-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRepresentation('matrix'),\n        children: \"\\u041C\\u0430\\u0442\\u0440\\u0438\\u0446\\u044F \\u0421\\u0443\\u043C\\u0456\\u0436\\u043D\\u043E\\u0441\\u0442\\u0456\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRepresentation('edges'),\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0420\\u0435\\u0431\\u0435\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), representation === 'matrix' && /*#__PURE__*/_jsxDEV(AdjacencyMatrix, {\n      nodes: nodes,\n      edges: edges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 39\n    }, this), representation === 'edges' && /*#__PURE__*/_jsxDEV(EdgeList, {\n      edges: edges\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startDFS,\n        children: \"\\u0421\\u0442\\u0430\\u0440\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pauseDFS,\n        disabled: !isRunning,\n        children: isPaused ? 'Продовжити' : 'Пауза'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undoDFS,\n        disabled: !isRunning,\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGraph,\n        children: \"\\u0417\\u0430\\u0431\\u0443\\u0442\\u0438 \\u043F\\u043E\\u0448\\u0443\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), currentNode && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041F\\u043E\\u0442\\u043E\\u0447\\u043D\\u0430 \\u0432\\u0435\\u0440\\u0448\\u0438\\u043D\\u0430: V\", currentNode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"8UnS6VAZSaHXhli6UsCskm44aOU=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","Link","AdjacencyMatrix","EdgeList","jsxDEV","_jsxDEV","Graph","_s","nodes","setNodes","edges","setEdges","isRunning","setIsRunning","isPaused","setIsPaused","currentNode","setCurrentNode","stepHistory","setStepHistory","representation","setRepresentation","initializeGraph","initialNodes","id","label","x","y","state","initialEdges","from","to","startDFS","startNodeId","parseInt","prompt","isNaN","some","node","alert","visited","Set","stack","length","Promise","resolve","setTimeout","current","pop","prev","map","add","neighbors","filter","edge","has","forEach","neighbor","push","pauseDFS","undoDFS","lastVisitedNode","resetGraph","renderGraph","width","height","children","index","fromNode","find","toNode","x1","y1","x2","y2","stroke","markerEnd","fileName","_jsxFileName","lineNumber","columnNumber","markerWidth","markerHeight","refX","refY","orient","points","cx","cy","r","fill","textAnchor","fontSize","className","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/kr/src/components/Graph/Graph.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AdjacencyMatrix from './AdjacencyMatrix/AdjacencyMatrix';\r\nimport EdgeList from './EdgeList/EdgeList';\r\nimport './Graph.css';\r\n\r\nconst Graph = () => {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [currentNode, setCurrentNode] = useState(null);\r\n  const [stepHistory, setStepHistory] = useState([]); // Історія для кнопки \"Назад\"\r\n  const [representation, setRepresentation] = useState('matrix');\r\n\r\n  useEffect(() => {\r\n    initializeGraph();\r\n  }, []);\r\n\r\n  const initializeGraph = () => {\r\n    const initialNodes = [\r\n      { id: 1, label: 'V1', x: 200, y: 200, state: 'unvisited' },\r\n      { id: 2, label: 'V2', x: 300, y: 200, state: 'unvisited' },\r\n      { id: 3, label: 'V3', x: 400, y: 200, state: 'unvisited' },\r\n      { id: 4, label: 'V4', x: 200, y: 300, state: 'unvisited' },\r\n      { id: 5, label: 'V5', x: 300, y: 300, state: 'unvisited' },\r\n      { id: 6, label: 'V6', x: 400, y: 300, state: 'unvisited' },\r\n    ];\r\n\r\n    const initialEdges = [\r\n      { from: 1, to: 2 },\r\n      { from: 2, to: 3 },\r\n      { from: 3, to: 6 },\r\n      { from: 1, to: 4 },\r\n      { from: 4, to: 5 },\r\n      { from: 5, to: 6 },\r\n    ];\r\n\r\n    setNodes(initialNodes);\r\n    setEdges(initialEdges);\r\n  };\r\n\r\n  const startDFS = async () => {\r\n    if (isRunning) return;\r\n\r\n    const startNodeId = parseInt(prompt('Введіть ID початкової вершини:'), 10);\r\n    if (isNaN(startNodeId) || !nodes.some((node) => node.id === startNodeId)) {\r\n      alert('Некоректний ID початкової вершини');\r\n      return;\r\n    }\r\n\r\n    setIsRunning(true);\r\n    setIsPaused(false);\r\n    const visited = new Set();\r\n    const stack = [startNodeId];\r\n    setStepHistory([startNodeId]); // Початкова вершина для кнопки \"Назад\"\r\n\r\n    while (stack.length > 0) {\r\n      // Очікування при паузі\r\n      while (isPaused) {\r\n        await new Promise((resolve) => setTimeout(resolve, 100));\r\n      }\r\n\r\n      const current = stack.pop();\r\n      setCurrentNode(current);\r\n\r\n      setNodes((prev) =>\r\n        prev.map((node) =>\r\n          node.id === current ? { ...node, state: 'processing' } : node\r\n        )\r\n      );\r\n\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n      visited.add(current);\r\n\r\n      const neighbors = edges\r\n        .filter((edge) => edge.from === current && !visited.has(edge.to))\r\n        .map((edge) => edge.to);\r\n\r\n      neighbors.forEach((neighbor) => {\r\n        if (!visited.has(neighbor)) {\r\n          stack.push(neighbor);\r\n        }\r\n      });\r\n\r\n      setStepHistory((prev) => [...prev, current]); // Додаємо вузол до історії\r\n      setNodes((prev) =>\r\n        prev.map((node) =>\r\n          node.id === current ? { ...node, state: 'visited' } : node\r\n        )\r\n      );\r\n    }\r\n\r\n    setIsRunning(false);\r\n    setCurrentNode(null);\r\n  };\r\n\r\n  const pauseDFS = () => {\r\n    setIsPaused(!isPaused);\r\n  };\r\n\r\n  const undoDFS = () => {\r\n    if (stepHistory.length <= 1) {\r\n      alert('Немає попередніх кроків для відкату.');\r\n      return;\r\n    }\r\n\r\n    const lastVisitedNode = stepHistory.pop();\r\n    setStepHistory([...stepHistory]);\r\n\r\n    setNodes((prev) =>\r\n      prev.map((node) =>\r\n        node.id === lastVisitedNode ? { ...node, state: 'unvisited' } : node\r\n      )\r\n    );\r\n    setCurrentNode(stepHistory[stepHistory.length - 1] || null);\r\n  };\r\n\r\n  const resetGraph = () => {\r\n    setNodes((prev) =>\r\n      prev.map((node) => ({\r\n        ...node,\r\n        state: 'unvisited',\r\n      }))\r\n    );\r\n    setStepHistory([]);\r\n    setCurrentNode(null);\r\n    setIsRunning(false);\r\n    setIsPaused(false);\r\n  };\r\n\r\n  const renderGraph = () => (\r\n    <svg width=\"800\" height=\"600\">\r\n      {edges.map((edge, index) => {\r\n        const fromNode = nodes.find((node) => node.id === edge.from);\r\n        const toNode = nodes.find((node) => node.id === edge.to);\r\n        if (!fromNode || !toNode) return null;\r\n        return (\r\n          <line\r\n            key={index}\r\n            x1={fromNode.x}\r\n            y1={fromNode.y}\r\n            x2={toNode.x}\r\n            y2={toNode.y}\r\n            stroke=\"black\"\r\n            markerEnd=\"url(#arrowhead)\"\r\n          />\r\n        );\r\n      })}\r\n      <defs>\r\n        <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\" refX=\"10\" refY=\"3.5\" orient=\"auto\">\r\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n        </marker>\r\n      </defs>\r\n      {nodes.map((node) => (\r\n        <g key={node.id}>\r\n          <circle\r\n            cx={node.x}\r\n            cy={node.y}\r\n            r=\"20\"\r\n            fill={\r\n              node.state === 'unvisited'\r\n                ? 'gray'\r\n                : node.state === 'processing'\r\n                ? 'orange'\r\n                : 'black'\r\n            }\r\n          />\r\n          <text x={node.x} y={node.y + 5} textAnchor=\"middle\" fill=\"white\" fontSize=\"15\">\r\n            {node.label}\r\n          </text>\r\n        </g>\r\n      ))}\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <div className=\"graph-container\">\r\n      <h1>Алгоритм Глибокого Пошуку (DFS)</h1>\r\n      <div className=\"graph-area\">{renderGraph()}</div>\r\n      <div className=\"representation-controls\">\r\n        <button onClick={() => setRepresentation('matrix')}>Матриця Суміжності</button>\r\n        <button onClick={() => setRepresentation('edges')}>Список Ребер</button>\r\n      </div>\r\n      {representation === 'matrix' && <AdjacencyMatrix nodes={nodes} edges={edges} />}\r\n      {representation === 'edges' && <EdgeList edges={edges} />}\r\n      <div className=\"controls\">\r\n        <button onClick={startDFS}>Старт</button>\r\n        <button onClick={pauseDFS} disabled={!isRunning}>\r\n          {isPaused ? 'Продовжити' : 'Пауза'}\r\n        </button>\r\n        <button onClick={undoDFS} disabled={!isRunning}>\r\n          Назад\r\n        </button>\r\n        <button onClick={resetGraph}>Забути пошук</button>\r\n        <Link to=\"/\">\r\n          <button>Home</button>\r\n        </Link>\r\n      </div>\r\n      {currentNode && <p>Поточна вершина: V{currentNode}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}