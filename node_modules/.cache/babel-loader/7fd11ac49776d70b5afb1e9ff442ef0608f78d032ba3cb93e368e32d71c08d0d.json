{"ast":null,"code":"var _jsxFileName = \"D:\\\\dfs-rbt-visualization\\\\src\\\\components\\\\RedBlackTree\\\\RedBlackTree.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './RedBlackTree.css';\nimport { insertNode, deleteNode, searchNode } from './rbtOperations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RedBlackTree() {\n  _s();\n  const [tree, setTree] = useState(null);\n  const [value, setValue] = useState('');\n  const [highlightedNode, setHighlightedNode] = useState(null);\n  const handleInsert = () => {\n    const newValue = parseInt(value);\n    if (!isNaN(newValue)) {\n      const newTree = insertNode(tree, newValue);\n      setTree(newTree);\n      setValue('');\n    }\n  };\n  const handleDelete = () => {\n    const deleteValue = parseInt(value);\n    if (!isNaN(deleteValue)) {\n      const newTree = deleteNode(tree, deleteValue);\n      setTree(newTree);\n      setValue('');\n    }\n  };\n  const handleSearch = () => {\n    const searchValue = parseInt(value);\n    if (!isNaN(searchValue)) {\n      const foundNode = searchNode(tree, searchValue);\n      if (foundNode) {\n        setHighlightedNode(foundNode);\n        alert(`Вузол ${searchValue} знайдено.`);\n      } else {\n        alert(`Вузол ${searchValue} не знайдено.`);\n      }\n      setValue('');\n    }\n  };\n  const renderTree = () => {\n    // Функція для відображення дерева за допомогою рекурсії\n    const renderNode = (node, x, y, angle, depth) => {\n      if (!node) return null;\n      const radius = 20;\n      const dx = 100 / depth;\n      const dy = 70;\n      const leftX = x - dx;\n      const rightX = x + dx;\n      const childY = y + dy;\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [node.left && /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: x,\n          y1: y,\n          x2: leftX,\n          y2: childY,\n          stroke: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), node.right && /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: x,\n          y1: y,\n          x2: rightX,\n          y2: childY,\n          stroke: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: x,\n          cy: y,\n          r: radius,\n          fill: node.color,\n          stroke: highlightedNode === node ? 'yellow' : 'black',\n          strokeWidth: highlightedNode === node ? 3 : 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: x,\n          y: y + 5,\n          textAnchor: \"middle\",\n          fill: \"white\",\n          fontSize: \"15\",\n          children: node.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), renderNode(node.left, leftX, childY, angle - 20, depth + 1), renderNode(node.right, rightX, childY, angle + 20, depth + 1)]\n      }, node.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    };\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"800\",\n      height: \"600\",\n      children: renderNode(tree, 400, 50, 0, 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    // Очищаємо виділення після деякого часу\n    if (highlightedNode) {\n      const timer = setTimeout(() => setHighlightedNode(null), 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [highlightedNode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rbt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Red-Black Tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        onChange: e => setValue(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u043D\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInsert,\n        children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"\\u041F\\u043E\\u0448\\u0443\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-area\",\n      children: renderTree()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(RedBlackTree, \"szYybmr4NWHH9f5KcPER78ropSs=\");\n_c = RedBlackTree;\nexport default RedBlackTree;\nvar _c;\n$RefreshReg$(_c, \"RedBlackTree\");","map":{"version":3,"names":["React","useState","useEffect","Link","insertNode","deleteNode","searchNode","jsxDEV","_jsxDEV","RedBlackTree","_s","tree","setTree","value","setValue","highlightedNode","setHighlightedNode","handleInsert","newValue","parseInt","isNaN","newTree","handleDelete","deleteValue","handleSearch","searchValue","foundNode","alert","renderTree","renderNode","node","x","y","angle","depth","radius","dx","dy","leftX","rightX","childY","children","left","x1","y1","x2","y2","stroke","fileName","_jsxFileName","lineNumber","columnNumber","right","cx","cy","r","fill","color","strokeWidth","textAnchor","fontSize","id","width","height","timer","setTimeout","clearTimeout","className","type","onChange","e","target","placeholder","onClick","to","_c","$RefreshReg$"],"sources":["D:/dfs-rbt-visualization/src/components/RedBlackTree/RedBlackTree.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './RedBlackTree.css';\r\nimport { insertNode, deleteNode, searchNode } from './rbtOperations';\r\n\r\nfunction RedBlackTree() {\r\n  const [tree, setTree] = useState(null);\r\n  const [value, setValue] = useState('');\r\n  const [highlightedNode, setHighlightedNode] = useState(null);\r\n\r\n  const handleInsert = () => {\r\n    const newValue = parseInt(value);\r\n    if (!isNaN(newValue)) {\r\n      const newTree = insertNode(tree, newValue);\r\n      setTree(newTree);\r\n      setValue('');\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    const deleteValue = parseInt(value);\r\n    if (!isNaN(deleteValue)) {\r\n      const newTree = deleteNode(tree, deleteValue);\r\n      setTree(newTree);\r\n      setValue('');\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const searchValue = parseInt(value);\r\n    if (!isNaN(searchValue)) {\r\n      const foundNode = searchNode(tree, searchValue);\r\n      if (foundNode) {\r\n        setHighlightedNode(foundNode);\r\n        alert(`Вузол ${searchValue} знайдено.`);\r\n      } else {\r\n        alert(`Вузол ${searchValue} не знайдено.`);\r\n      }\r\n      setValue('');\r\n    }\r\n  };\r\n\r\n  const renderTree = () => {\r\n    // Функція для відображення дерева за допомогою рекурсії\r\n    const renderNode = (node, x, y, angle, depth) => {\r\n      if (!node) return null;\r\n\r\n      const radius = 20;\r\n      const dx = 100 / depth;\r\n      const dy = 70;\r\n\r\n      const leftX = x - dx;\r\n      const rightX = x + dx;\r\n      const childY = y + dy;\r\n\r\n      return (\r\n        <g key={node.id}>\r\n          {/* Лінії до дітей */}\r\n          {node.left && (\r\n            <line\r\n              x1={x}\r\n              y1={y}\r\n              x2={leftX}\r\n              y2={childY}\r\n              stroke=\"black\"\r\n            />\r\n          )}\r\n          {node.right && (\r\n            <line\r\n              x1={x}\r\n              y1={y}\r\n              x2={rightX}\r\n              y2={childY}\r\n              stroke=\"black\"\r\n            />\r\n          )}\r\n          {/* Вузол */}\r\n          <circle\r\n            cx={x}\r\n            cy={y}\r\n            r={radius}\r\n            fill={node.color}\r\n            stroke={highlightedNode === node ? 'yellow' : 'black'}\r\n            strokeWidth={highlightedNode === node ? 3 : 1}\r\n          />\r\n          <text\r\n            x={x}\r\n            y={y + 5}\r\n            textAnchor=\"middle\"\r\n            fill=\"white\"\r\n            fontSize=\"15\"\r\n          >\r\n            {node.value}\r\n          </text>\r\n          {/* Рекурсивно відображаємо дітей */}\r\n          {renderNode(node.left, leftX, childY, angle - 20, depth + 1)}\r\n          {renderNode(node.right, rightX, childY, angle + 20, depth + 1)}\r\n        </g>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <svg width=\"800\" height=\"600\">\r\n        {renderNode(tree, 400, 50, 0, 1)}\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Очищаємо виділення після деякого часу\r\n    if (highlightedNode) {\r\n      const timer = setTimeout(() => setHighlightedNode(null), 2000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [highlightedNode]);\r\n\r\n  return (\r\n    <div className=\"rbt-container\">\r\n      <h1>Red-Black Tree</h1>\r\n      <div className=\"controls\">\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          placeholder=\"Введіть значення\"\r\n        />\r\n        <button onClick={handleInsert}>Додати</button>\r\n        <button onClick={handleDelete}>Видалити</button>\r\n        <button onClick={handleSearch}>Пошук</button>\r\n        <Link to=\"/\">\r\n          <button>Home</button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"tree-area\">\r\n        {renderTree()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RedBlackTree;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}